{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Corda RPC PoolBoy PoolBoy is an RPC connection pool with support for multiple Corda nodes. Note this is an early release. It is highly unstable but provided in hope it can be useful. Contributions are welcome. Installation Add PoolBoy to your Cordapp s Gradle dependencies: dependencies { // PoolBoy dependency compile ( com.github.manosbatsis.corda.rpc.poolboy:corda-rpc-poolboy:$poolboy_version ) // Corda dependencies etc. // ... } Configuration To use PoolBoy you will have to implement a RpcConfigurationService . The service provides RPC pool and connection configuration. Implementations can be fixed or fully dynamic, e.g. based on a properties file or database connection etc. respectively. A future release will provide a sample, properties-based implementation. In the meantime you can find an example in Corbeans default RpcConfigurationService . The main configuration items provided by such a service are as follows: getRpcPoolParams() : A PoolParams instance, in each turn specifies: rpcClientsMode : An RpcClientsMode value to control the CordaRPCClient creation strategy, one of SHARED , POOLED , DEDICATED . Default is SHARED . rpcClientPool : The commons-pool2 keyed configuration to use if rpcClientsMode is set to POOLED , equivalent to a GenericKeyedObjectPoolConfig . rpcOpsPool : The commons-pool2 keyed configuration to use for NodeRpcConnection instances - those start and wrap a CordaRPCOps getRpcNodeParams(String) : Provides the RPC connection configuration (i.e. NodeParams ) corresponding to the given node key per your configuration implementation, e.g. X500 name, application.properties key, database primary key etc. Note that the implementor is solely responsible for any caching. getGracefulReconnect(NodeParams) : Override to change the GracefulReconnect implementation to use when NodeParams.disableGracefulReconnect is false . getCustomSerializers(List String ) : Custom serializer types found in the configured cordapp packages. Override to bypass classpath scanning and improve search discovery performance. buildPoolKey(String) : Builds a PoolKey for the given node name. Override to customise PoolKey.externalTrace and PoolKey.impersonatedActor , i.e. the equivalent parameters passed to CordaRPCClient.start() Sample Usage Using a full PoolBoy : // Create the PoolBoy instance val poolBoy = PoolBoy ( myRpcConfigurationService ) // Obtain a pool key for the target node val poolKey = myRpcConfigurationService . buildPoolKey ( nodeName ) // Do something with the CordaRPCOps // for the given node name poolBoy . withConnection ( poolKey ){ // e.g. start a flow it . proxy . startFlow ( MyFlow :: class . java , foo , bar , baz ) } Using a PoolBoyConnection , i.e. a pooled connection handle to a target node directly: // Create the PoolBoy instance val poolBoy = PoolBoy ( myRpcConfigurationService ) // Obtain a pool key for the target node val poolKey = myRpcConfigurationService . buildPoolKey ( nodeName ) // Get a pool-able connection handle val pbCconn : PoolBoyConnection = poolBoy . forKey ( poolKey ) // Do something with the CordaRPCOps // for the target node pbCconn . withConnection { // e.g. start a flow it . proxy . startFlow ( MyFlow :: class . java , foo , bar , baz ) } Both PoolBoy and PoolBoyConnection have borrowConnection() and returnConnection() methods, but it s highly discouraged; you d better know what you re doing if you use them. The withConnection approach is preferred.","title":"Overview"},{"location":"#corda-rpc-poolboy","text":"PoolBoy is an RPC connection pool with support for multiple Corda nodes. Note this is an early release. It is highly unstable but provided in hope it can be useful. Contributions are welcome.","title":"Corda RPC PoolBoy"},{"location":"#installation","text":"Add PoolBoy to your Cordapp s Gradle dependencies: dependencies { // PoolBoy dependency compile ( com.github.manosbatsis.corda.rpc.poolboy:corda-rpc-poolboy:$poolboy_version ) // Corda dependencies etc. // ... }","title":"Installation"},{"location":"#configuration","text":"To use PoolBoy you will have to implement a RpcConfigurationService . The service provides RPC pool and connection configuration. Implementations can be fixed or fully dynamic, e.g. based on a properties file or database connection etc. respectively. A future release will provide a sample, properties-based implementation. In the meantime you can find an example in Corbeans default RpcConfigurationService . The main configuration items provided by such a service are as follows: getRpcPoolParams() : A PoolParams instance, in each turn specifies: rpcClientsMode : An RpcClientsMode value to control the CordaRPCClient creation strategy, one of SHARED , POOLED , DEDICATED . Default is SHARED . rpcClientPool : The commons-pool2 keyed configuration to use if rpcClientsMode is set to POOLED , equivalent to a GenericKeyedObjectPoolConfig . rpcOpsPool : The commons-pool2 keyed configuration to use for NodeRpcConnection instances - those start and wrap a CordaRPCOps getRpcNodeParams(String) : Provides the RPC connection configuration (i.e. NodeParams ) corresponding to the given node key per your configuration implementation, e.g. X500 name, application.properties key, database primary key etc. Note that the implementor is solely responsible for any caching. getGracefulReconnect(NodeParams) : Override to change the GracefulReconnect implementation to use when NodeParams.disableGracefulReconnect is false . getCustomSerializers(List String ) : Custom serializer types found in the configured cordapp packages. Override to bypass classpath scanning and improve search discovery performance. buildPoolKey(String) : Builds a PoolKey for the given node name. Override to customise PoolKey.externalTrace and PoolKey.impersonatedActor , i.e. the equivalent parameters passed to CordaRPCClient.start()","title":"Configuration"},{"location":"#sample-usage","text":"Using a full PoolBoy : // Create the PoolBoy instance val poolBoy = PoolBoy ( myRpcConfigurationService ) // Obtain a pool key for the target node val poolKey = myRpcConfigurationService . buildPoolKey ( nodeName ) // Do something with the CordaRPCOps // for the given node name poolBoy . withConnection ( poolKey ){ // e.g. start a flow it . proxy . startFlow ( MyFlow :: class . java , foo , bar , baz ) } Using a PoolBoyConnection , i.e. a pooled connection handle to a target node directly: // Create the PoolBoy instance val poolBoy = PoolBoy ( myRpcConfigurationService ) // Obtain a pool key for the target node val poolKey = myRpcConfigurationService . buildPoolKey ( nodeName ) // Get a pool-able connection handle val pbCconn : PoolBoyConnection = poolBoy . forKey ( poolKey ) // Do something with the CordaRPCOps // for the target node pbCconn . withConnection { // e.g. start a flow it . proxy . startFlow ( MyFlow :: class . java , foo , bar , baz ) } Both PoolBoy and PoolBoyConnection have borrowConnection() and returnConnection() methods, but it s highly discouraged; you d better know what you re doing if you use them. The withConnection approach is preferred.","title":"Sample Usage"},{"location":"changelog/","text":"Changelog The following sections describe major changes per version and can be helpful with version upgrades. 0.4 Upgraded to Corda 4.6 0.2 - 0.3 Minor fixes, documentation. 0.1 Initial release","title":"Change Log"},{"location":"changelog/#changelog","text":"The following sections describe major changes per version and can be helpful with version upgrades.","title":"Changelog"},{"location":"changelog/#04","text":"Upgraded to Corda 4.6","title":"0.4"},{"location":"changelog/#02-03","text":"Minor fixes, documentation.","title":"0.2 - 0.3"},{"location":"changelog/#01","text":"Initial release","title":"0.1"},{"location":"faq/","text":"Frequently Asked Questions Answers to common questions. License: Can I use PoolBoy with my project? Yes, PoolBoy can be used as a library/dependency with no side-effect to your project. PoolBoy is distributed under the GNU Lesser General Public License or LGPL, the same license adopted by Corda dependencies like Hibernate.","title":"FAQ"},{"location":"faq/#frequently-asked-questions","text":"Answers to common questions.","title":"Frequently Asked Questions"},{"location":"faq/#license-can-i-use-poolboy-with-my-project","text":"Yes, PoolBoy can be used as a library/dependency with no side-effect to your project. PoolBoy is distributed under the GNU Lesser General Public License or LGPL, the same license adopted by Corda dependencies like Hibernate.","title":"License: Can I use PoolBoy with my project?"},{"location":"0.x/","text":"Packages Name Summary com.github.manosbatsis.corda.rpc.poolboy com.github.manosbatsis.corda.rpc.poolboy.annotation com.github.manosbatsis.corda.rpc.poolboy.config com.github.manosbatsis.corda.rpc.poolboy.connection com.github.manosbatsis.corda.rpc.poolboy.pool com.github.manosbatsis.corda.rpc.poolboy.pool.client com.github.manosbatsis.corda.rpc.poolboy.pool.connection com.github.manosbatsis.corda.rpc.poolboy.support Index All Types","title":"Home"},{"location":"0.x/#packages","text":"Name Summary com.github.manosbatsis.corda.rpc.poolboy com.github.manosbatsis.corda.rpc.poolboy.annotation com.github.manosbatsis.corda.rpc.poolboy.config com.github.manosbatsis.corda.rpc.poolboy.connection com.github.manosbatsis.corda.rpc.poolboy.pool com.github.manosbatsis.corda.rpc.poolboy.pool.client com.github.manosbatsis.corda.rpc.poolboy.pool.connection com.github.manosbatsis.corda.rpc.poolboy.support","title":"Packages"},{"location":"0.x/#index","text":"All Types","title":"Index"},{"location":"0.x/alltypes/","text":"All Types Name Summary com.github.manosbatsis.corda.rpc.poolboy.connection.AbstractNodeRpcConnection Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient com.github.manosbatsis.corda.rpc.poolboy.pool.connection.AbstractRpcConnectionFactory com.github.manosbatsis.corda.rpc.poolboy.annotation.AllOpen For Kotlin All Open compiler plugin com.github.manosbatsis.corda.rpc.poolboy.pool.BaseKeyedPool com.github.manosbatsis.corda.rpc.poolboy.pool.client.CordaRpcClientFactory com.github.manosbatsis.corda.rpc.poolboy.pool.client.CordaRpcClientPool com.github.manosbatsis.corda.rpc.poolboy.pool.connection.DedicatedRpcClientsNodeRpcConnectionFactory A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection. com.github.manosbatsis.corda.rpc.poolboy.connection.EagerNodeRpcConnection Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient com.github.manosbatsis.corda.rpc.poolboy.config.GenericKeyedObjectPoolConfigData Data class version of GenericKeyedObjectPoolConfig com.github.manosbatsis.corda.rpc.poolboy.connection.LazyNodeRpcConnection Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient com.github.manosbatsis.corda.rpc.poolboy.annotation.NoArgs For Kotlin No Args compiler plugin com.github.manosbatsis.corda.rpc.poolboy.config.NodeParams Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties com.github.manosbatsis.corda.rpc.poolboy.connection.NodeRpcConnection Wraps a Corda Node RPC connection proxy com.github.manosbatsis.corda.rpc.poolboy.pool.connection.NodeRpcConnectionConfig com.github.manosbatsis.corda.rpc.poolboy.pool.connection.NodeRpcConnectionPool com.github.manosbatsis.corda.rpc.poolboy.PoolBoy Provides RPC connection pooling com.github.manosbatsis.corda.rpc.poolboy.PoolBoyConnection RPC connection pooling for a specific node com.github.manosbatsis.corda.rpc.poolboy.PoolBoyNonPooledConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection com.github.manosbatsis.corda.rpc.poolboy.PoolBoyNonPooledRawRpcConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps com.github.manosbatsis.corda.rpc.poolboy.PoolBoyPooledConnection Regular, pooled PoolBoyConnection implementation com.github.manosbatsis.corda.rpc.poolboy.pool.connection.PooledNodeRpcConnection com.github.manosbatsis.corda.rpc.poolboy.PoolKey com.github.manosbatsis.corda.rpc.poolboy.config.PoolParams Provides configuration parameters for RPC pooling com.github.manosbatsis.corda.rpc.poolboy.pool.connection.RpcClientPoolBackedNodeRpcConnectionFactory Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool com.github.manosbatsis.corda.rpc.poolboy.config.RpcClientsMode com.github.manosbatsis.corda.rpc.poolboy.config.RpcConfigurationService Provides RPC pool and connection information for nodes. Can be fixed or fully dynamic, e.g. based on a properties file or database connection respectively. com.github.manosbatsis.corda.rpc.poolboy.support.RpcSwallowedExceptionListener com.github.manosbatsis.corda.rpc.poolboy.pool.connection.SharedRpcClientsNodeRpcConnectionFactory A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name. com.github.manosbatsis.corda.rpc.poolboy.support.Util","title":"Home"},{"location":"0.x/alltypes/#all-types","text":"Name Summary com.github.manosbatsis.corda.rpc.poolboy.connection.AbstractNodeRpcConnection Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient com.github.manosbatsis.corda.rpc.poolboy.pool.connection.AbstractRpcConnectionFactory com.github.manosbatsis.corda.rpc.poolboy.annotation.AllOpen For Kotlin All Open compiler plugin com.github.manosbatsis.corda.rpc.poolboy.pool.BaseKeyedPool com.github.manosbatsis.corda.rpc.poolboy.pool.client.CordaRpcClientFactory com.github.manosbatsis.corda.rpc.poolboy.pool.client.CordaRpcClientPool com.github.manosbatsis.corda.rpc.poolboy.pool.connection.DedicatedRpcClientsNodeRpcConnectionFactory A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection. com.github.manosbatsis.corda.rpc.poolboy.connection.EagerNodeRpcConnection Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient com.github.manosbatsis.corda.rpc.poolboy.config.GenericKeyedObjectPoolConfigData Data class version of GenericKeyedObjectPoolConfig com.github.manosbatsis.corda.rpc.poolboy.connection.LazyNodeRpcConnection Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient com.github.manosbatsis.corda.rpc.poolboy.annotation.NoArgs For Kotlin No Args compiler plugin com.github.manosbatsis.corda.rpc.poolboy.config.NodeParams Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties com.github.manosbatsis.corda.rpc.poolboy.connection.NodeRpcConnection Wraps a Corda Node RPC connection proxy com.github.manosbatsis.corda.rpc.poolboy.pool.connection.NodeRpcConnectionConfig com.github.manosbatsis.corda.rpc.poolboy.pool.connection.NodeRpcConnectionPool com.github.manosbatsis.corda.rpc.poolboy.PoolBoy Provides RPC connection pooling com.github.manosbatsis.corda.rpc.poolboy.PoolBoyConnection RPC connection pooling for a specific node com.github.manosbatsis.corda.rpc.poolboy.PoolBoyNonPooledConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection com.github.manosbatsis.corda.rpc.poolboy.PoolBoyNonPooledRawRpcConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps com.github.manosbatsis.corda.rpc.poolboy.PoolBoyPooledConnection Regular, pooled PoolBoyConnection implementation com.github.manosbatsis.corda.rpc.poolboy.pool.connection.PooledNodeRpcConnection com.github.manosbatsis.corda.rpc.poolboy.PoolKey com.github.manosbatsis.corda.rpc.poolboy.config.PoolParams Provides configuration parameters for RPC pooling com.github.manosbatsis.corda.rpc.poolboy.pool.connection.RpcClientPoolBackedNodeRpcConnectionFactory Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool com.github.manosbatsis.corda.rpc.poolboy.config.RpcClientsMode com.github.manosbatsis.corda.rpc.poolboy.config.RpcConfigurationService Provides RPC pool and connection information for nodes. Can be fixed or fully dynamic, e.g. based on a properties file or database connection respectively. com.github.manosbatsis.corda.rpc.poolboy.support.RpcSwallowedExceptionListener com.github.manosbatsis.corda.rpc.poolboy.pool.connection.SharedRpcClientsNodeRpcConnectionFactory A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name. com.github.manosbatsis.corda.rpc.poolboy.support.Util","title":"All Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/","text":"com.github.manosbatsis.corda.rpc.poolboy Package com.github.manosbatsis.corda.rpc.poolboy Types Name Summary PoolBoy class PoolBoy Provides RPC connection pooling PoolBoyConnection interface PoolBoyConnection RPC connection pooling for a specific node PoolBoyNonPooledConnection open class PoolBoyNonPooledConnection : PoolBoyConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection PoolBoyNonPooledRawRpcConnection class PoolBoyNonPooledRawRpcConnection : PoolBoyNonPooledConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps PoolBoyPooledConnection class PoolBoyPooledConnection : PoolBoyConnection Regular, pooled PoolBoyConnection implementation PoolKey data class PoolKey","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/#package-comgithubmanosbatsiscordarpcpoolboy","text":"","title":"Package com.github.manosbatsis.corda.rpc.poolboy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/#types","text":"Name Summary PoolBoy class PoolBoy Provides RPC connection pooling PoolBoyConnection interface PoolBoyConnection RPC connection pooling for a specific node PoolBoyNonPooledConnection open class PoolBoyNonPooledConnection : PoolBoyConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection PoolBoyNonPooledRawRpcConnection class PoolBoyNonPooledRawRpcConnection : PoolBoyNonPooledConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps PoolBoyPooledConnection class PoolBoyPooledConnection : PoolBoyConnection Regular, pooled PoolBoyConnection implementation PoolKey data class PoolKey","title":"Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoy PoolBoy class PoolBoy Provides RPC connection pooling Constructors Name Summary init PoolBoy(rpcConfigurationService: RpcConfigurationService ) Provides RPC connection pooling Functions Name Summary borrowConnection fun borrowConnection(key: PoolKey ): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool. forKey fun forKey(key: PoolKey ): PoolBoyConnection Get a pool-able connection wrapper for the given key returnConnection fun returnConnection(key: PoolKey , rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool. withConnection fun A withConnection(key: PoolKey , block: ( NodeRpcConnection ) - A ): A Run some code with a NodeRpcConnection from the pool in-context","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/#poolboy","text":"class PoolBoy Provides RPC connection pooling","title":"PoolBoy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/#constructors","text":"Name Summary init PoolBoy(rpcConfigurationService: RpcConfigurationService ) Provides RPC connection pooling","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/#functions","text":"Name Summary borrowConnection fun borrowConnection(key: PoolKey ): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool. forKey fun forKey(key: PoolKey ): PoolBoyConnection Get a pool-able connection wrapper for the given key returnConnection fun returnConnection(key: PoolKey , rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool. withConnection fun A withConnection(key: PoolKey , block: ( NodeRpcConnection ) - A ): A Run some code with a NodeRpcConnection from the pool in-context","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoy / init init PoolBoy(rpcConfigurationService: RpcConfigurationService ) Provides RPC connection pooling","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/-init-/#init","text":"PoolBoy(rpcConfigurationService: RpcConfigurationService ) Provides RPC connection pooling","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/borrow-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoy / borrowConnection borrowConnection fun borrowConnection(key: PoolKey ): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool.","title":"Borrow connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/borrow-connection/#borrowconnection","text":"fun borrowConnection(key: PoolKey ): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool.","title":"borrowConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/for-key/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoy / forKey forKey fun forKey(key: PoolKey ): PoolBoyConnection Get a pool-able connection wrapper for the given key","title":"For key"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/for-key/#forkey","text":"fun forKey(key: PoolKey ): PoolBoyConnection Get a pool-able connection wrapper for the given key","title":"forKey"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/return-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoy / returnConnection returnConnection fun returnConnection(key: PoolKey , rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool.","title":"Return connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/return-connection/#returnconnection","text":"fun returnConnection(key: PoolKey , rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool.","title":"returnConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/with-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoy / withConnection withConnection fun A withConnection(key: PoolKey , block: ( NodeRpcConnection ) - A ): A Run some code with a NodeRpcConnection from the pool in-context","title":"With connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy/with-connection/#withconnection","text":"fun A withConnection(key: PoolKey , block: ( NodeRpcConnection ) - A ): A Run some code with a NodeRpcConnection from the pool in-context","title":"withConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyConnection PoolBoyConnection interface PoolBoyConnection RPC connection pooling for a specific node Functions Name Summary borrowConnection abstract fun borrowConnection(): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool using the preconfigured key. returnConnection abstract fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool using the preconfigured key. withConnection open fun A withConnection(block: ( NodeRpcConnection ) - A ): A Run some code with with a NodeRpcConnection from the pool in-context using the preconfigured key Inheritors Name Summary PoolBoyNonPooledConnection open class PoolBoyNonPooledConnection : PoolBoyConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection PoolBoyPooledConnection class PoolBoyPooledConnection : PoolBoyConnection Regular, pooled PoolBoyConnection implementation","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/#poolboyconnection","text":"interface PoolBoyConnection RPC connection pooling for a specific node","title":"PoolBoyConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/#functions","text":"Name Summary borrowConnection abstract fun borrowConnection(): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool using the preconfigured key. returnConnection abstract fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool using the preconfigured key. withConnection open fun A withConnection(block: ( NodeRpcConnection ) - A ): A Run some code with with a NodeRpcConnection from the pool in-context using the preconfigured key","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/#inheritors","text":"Name Summary PoolBoyNonPooledConnection open class PoolBoyNonPooledConnection : PoolBoyConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection PoolBoyPooledConnection class PoolBoyPooledConnection : PoolBoyConnection Regular, pooled PoolBoyConnection implementation","title":"Inheritors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/borrow-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyConnection / borrowConnection borrowConnection abstract fun borrowConnection(): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool using the preconfigured key.","title":"Borrow connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/borrow-connection/#borrowconnection","text":"abstract fun borrowConnection(): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool using the preconfigured key.","title":"borrowConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/return-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyConnection / returnConnection returnConnection abstract fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool using the preconfigured key.","title":"Return connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/return-connection/#returnconnection","text":"abstract fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool using the preconfigured key.","title":"returnConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/with-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyConnection / withConnection withConnection open fun A withConnection(block: ( NodeRpcConnection ) - A ): A Run some code with with a NodeRpcConnection from the pool in-context using the preconfigured key","title":"With connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-connection/with-connection/#withconnection","text":"open fun A withConnection(block: ( NodeRpcConnection ) - A ): A Run some code with with a NodeRpcConnection from the pool in-context using the preconfigured key","title":"withConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledConnection PoolBoyNonPooledConnection open class PoolBoyNonPooledConnection : PoolBoyConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection Constructors Name Summary init PoolBoyNonPooledConnection(connection: NodeRpcConnection ) Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection Properties Name Summary connection val connection: NodeRpcConnection Functions Name Summary borrowConnection open fun borrowConnection(): NodeRpcConnection Reuses the preconfigured NodeRpcConnection returnConnection open fun returnConnection(rpcConnection: NodeRpcConnection ): Unit No-op Inherited Functions Name Summary withConnection open fun A withConnection(block: ( NodeRpcConnection ) - A ): A Run some code with with a NodeRpcConnection from the pool in-context using the preconfigured key Inheritors Name Summary PoolBoyNonPooledRawRpcConnection class PoolBoyNonPooledRawRpcConnection : PoolBoyNonPooledConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/#poolboynonpooledconnection","text":"open class PoolBoyNonPooledConnection : PoolBoyConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection","title":"PoolBoyNonPooledConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/#constructors","text":"Name Summary init PoolBoyNonPooledConnection(connection: NodeRpcConnection ) Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/#properties","text":"Name Summary connection val connection: NodeRpcConnection","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/#functions","text":"Name Summary borrowConnection open fun borrowConnection(): NodeRpcConnection Reuses the preconfigured NodeRpcConnection returnConnection open fun returnConnection(rpcConnection: NodeRpcConnection ): Unit No-op","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/#inherited-functions","text":"Name Summary withConnection open fun A withConnection(block: ( NodeRpcConnection ) - A ): A Run some code with with a NodeRpcConnection from the pool in-context using the preconfigured key","title":"Inherited Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/#inheritors","text":"Name Summary PoolBoyNonPooledRawRpcConnection class PoolBoyNonPooledRawRpcConnection : PoolBoyNonPooledConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps","title":"Inheritors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledConnection / init init PoolBoyNonPooledConnection(connection: NodeRpcConnection ) Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/-init-/#init","text":"PoolBoyNonPooledConnection(connection: NodeRpcConnection ) Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static NodeRpcConnection","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/borrow-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledConnection / borrowConnection borrowConnection open fun borrowConnection(): NodeRpcConnection Overrides PoolBoyConnection.borrowConnection Reuses the preconfigured NodeRpcConnection","title":"Borrow connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/borrow-connection/#borrowconnection","text":"open fun borrowConnection(): NodeRpcConnection Overrides PoolBoyConnection.borrowConnection Reuses the preconfigured NodeRpcConnection","title":"borrowConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledConnection / connection connection val connection: NodeRpcConnection","title":"Connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/connection/#connection","text":"val connection: NodeRpcConnection","title":"connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/return-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledConnection / returnConnection returnConnection open fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Overrides PoolBoyConnection.returnConnection No-op","title":"Return connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-connection/return-connection/#returnconnection","text":"open fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Overrides PoolBoyConnection.returnConnection No-op","title":"returnConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledRawRpcConnection PoolBoyNonPooledRawRpcConnection class PoolBoyNonPooledRawRpcConnection : PoolBoyNonPooledConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps Types Name Summary CordaRPCOpsWrappingConnection class CordaRPCOpsWrappingConnection : NodeRpcConnection Constructors Name Summary init PoolBoyNonPooledRawRpcConnection(rpcOps: CordaRPCOps) Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps Inherited Properties Name Summary connection val connection: NodeRpcConnection Inherited Functions Name Summary borrowConnection open fun borrowConnection(): NodeRpcConnection Reuses the preconfigured NodeRpcConnection returnConnection open fun returnConnection(rpcConnection: NodeRpcConnection ): Unit No-op","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/#poolboynonpooledrawrpcconnection","text":"class PoolBoyNonPooledRawRpcConnection : PoolBoyNonPooledConnection Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps","title":"PoolBoyNonPooledRawRpcConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/#types","text":"Name Summary CordaRPCOpsWrappingConnection class CordaRPCOpsWrappingConnection : NodeRpcConnection","title":"Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/#constructors","text":"Name Summary init PoolBoyNonPooledRawRpcConnection(rpcOps: CordaRPCOps) Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/#inherited-properties","text":"Name Summary connection val connection: NodeRpcConnection","title":"Inherited Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/#inherited-functions","text":"Name Summary borrowConnection open fun borrowConnection(): NodeRpcConnection Reuses the preconfigured NodeRpcConnection returnConnection open fun returnConnection(rpcConnection: NodeRpcConnection ): Unit No-op","title":"Inherited Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledRawRpcConnection / init init PoolBoyNonPooledRawRpcConnection(rpcOps: CordaRPCOps) Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-init-/#init","text":"PoolBoyNonPooledRawRpcConnection(rpcOps: CordaRPCOps) Non-pooled PoolBoyConnection adapter implementation for legacy apps using a static CordaRPCOps","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledRawRpcConnection / CordaRPCOpsWrappingConnection CordaRPCOpsWrappingConnection class CordaRPCOpsWrappingConnection : NodeRpcConnection Constructors Name Summary init CordaRPCOpsWrappingConnection(proxy: CordaRPCOps, skipInfo: Boolean = true) Properties Name Summary proxy val proxy: CordaRPCOps Obtain a CordaRPCOps proxy for this connection skipInfo val skipInfo: Boolean Inherited Functions Name Summary skipInfo open fun skipInfo(): Boolean Whether this connection should be kept private e.g. from actuator","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/#cordarpcopswrappingconnection","text":"class CordaRPCOpsWrappingConnection : NodeRpcConnection","title":"CordaRPCOpsWrappingConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/#constructors","text":"Name Summary init CordaRPCOpsWrappingConnection(proxy: CordaRPCOps, skipInfo: Boolean = true)","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/#properties","text":"Name Summary proxy val proxy: CordaRPCOps Obtain a CordaRPCOps proxy for this connection skipInfo val skipInfo: Boolean","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/#inherited-functions","text":"Name Summary skipInfo open fun skipInfo(): Boolean Whether this connection should be kept private e.g. from actuator","title":"Inherited Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledRawRpcConnection / CordaRPCOpsWrappingConnection / init init CordaRPCOpsWrappingConnection(proxy: CordaRPCOps, skipInfo: Boolean = true)","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/-init-/#init","text":"CordaRPCOpsWrappingConnection(proxy: CordaRPCOps, skipInfo: Boolean = true)","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/proxy/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledRawRpcConnection / CordaRPCOpsWrappingConnection / proxy proxy val proxy: CordaRPCOps Overrides NodeRpcConnection.proxy Obtain a CordaRPCOps proxy for this connection","title":"Proxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/proxy/#proxy","text":"val proxy: CordaRPCOps Overrides NodeRpcConnection.proxy Obtain a CordaRPCOps proxy for this connection","title":"proxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/skip-info/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyNonPooledRawRpcConnection / CordaRPCOpsWrappingConnection / skipInfo skipInfo val skipInfo: Boolean","title":"Skip info"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-non-pooled-raw-rpc-connection/-corda-r-p-c-ops-wrapping-connection/skip-info/#skipinfo","text":"val skipInfo: Boolean","title":"skipInfo"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyPooledConnection PoolBoyPooledConnection class PoolBoyPooledConnection : PoolBoyConnection Regular, pooled PoolBoyConnection implementation Constructors Name Summary init PoolBoyPooledConnection(poolBoy: PoolBoy , key: PoolKey ) Regular, pooled PoolBoyConnection implementation Properties Name Summary key val key: PoolKey poolBoy val poolBoy: PoolBoy Functions Name Summary borrowConnection fun borrowConnection(): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool using the preconfigured key. returnConnection fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool using the preconfigured key. Inherited Functions Name Summary withConnection open fun A withConnection(block: ( NodeRpcConnection ) - A ): A Run some code with with a NodeRpcConnection from the pool in-context using the preconfigured key","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/#poolboypooledconnection","text":"class PoolBoyPooledConnection : PoolBoyConnection Regular, pooled PoolBoyConnection implementation","title":"PoolBoyPooledConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/#constructors","text":"Name Summary init PoolBoyPooledConnection(poolBoy: PoolBoy , key: PoolKey ) Regular, pooled PoolBoyConnection implementation","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/#properties","text":"Name Summary key val key: PoolKey poolBoy val poolBoy: PoolBoy","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/#functions","text":"Name Summary borrowConnection fun borrowConnection(): NodeRpcConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool using the preconfigured key. returnConnection fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool using the preconfigured key.","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/#inherited-functions","text":"Name Summary withConnection open fun A withConnection(block: ( NodeRpcConnection ) - A ): A Run some code with with a NodeRpcConnection from the pool in-context using the preconfigured key","title":"Inherited Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyPooledConnection / init init PoolBoyPooledConnection(poolBoy: PoolBoy , key: PoolKey ) Regular, pooled PoolBoyConnection implementation","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/-init-/#init","text":"PoolBoyPooledConnection(poolBoy: PoolBoy , key: PoolKey ) Regular, pooled PoolBoyConnection implementation","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/borrow-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyPooledConnection / borrowConnection borrowConnection fun borrowConnection(): NodeRpcConnection Overrides PoolBoyConnection.borrowConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool using the preconfigured key.","title":"Borrow connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/borrow-connection/#borrowconnection","text":"fun borrowConnection(): NodeRpcConnection Overrides PoolBoyConnection.borrowConnection Only use if you know what you are doing. Explicitly borrow a NodeRpcConnection from the pool using the preconfigured key.","title":"borrowConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/key/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyPooledConnection / key key val key: PoolKey","title":"Key"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/key/#key","text":"val key: PoolKey","title":"key"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/pool-boy/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyPooledConnection / poolBoy poolBoy val poolBoy: PoolBoy","title":"Pool boy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/pool-boy/#poolboy","text":"val poolBoy: PoolBoy","title":"poolBoy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/return-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolBoyPooledConnection / returnConnection returnConnection fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Overrides PoolBoyConnection.returnConnection Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool using the preconfigured key.","title":"Return connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-boy-pooled-connection/return-connection/#returnconnection","text":"fun returnConnection(rpcConnection: NodeRpcConnection ): Unit Overrides PoolBoyConnection.returnConnection Only use if you know what you are doing. Explicitly return a NodeRpcConnection from the pool using the preconfigured key.","title":"returnConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolKey PoolKey data class PoolKey Constructors Name Summary init PoolKey(nodeName: String, externalTrace: Trace? = null, impersonatedActor: Actor? = null) Properties Name Summary externalTrace val externalTrace: Trace? The external Trace to be used by the RPC proxy, if any. impersonatedActor val impersonatedActor: Actor? The impersonated Actor (e.g. Corda Account ID) to be used by the RPC proxy, if any. nodeName val nodeName: String The string representation of the node legal identity CordaX500Name or other node name key per your configuration implementation, e.g. application.properties key, database primary key or other business key etc.","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/#poolkey","text":"data class PoolKey","title":"PoolKey"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/#constructors","text":"Name Summary init PoolKey(nodeName: String, externalTrace: Trace? = null, impersonatedActor: Actor? = null)","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/#properties","text":"Name Summary externalTrace val externalTrace: Trace? The external Trace to be used by the RPC proxy, if any. impersonatedActor val impersonatedActor: Actor? The impersonated Actor (e.g. Corda Account ID) to be used by the RPC proxy, if any. nodeName val nodeName: String The string representation of the node legal identity CordaX500Name or other node name key per your configuration implementation, e.g. application.properties key, database primary key or other business key etc.","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolKey / init init PoolKey(nodeName: String, externalTrace: Trace? = null, impersonatedActor: Actor? = null)","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/-init-/#init","text":"PoolKey(nodeName: String, externalTrace: Trace? = null, impersonatedActor: Actor? = null)","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/external-trace/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolKey / externalTrace externalTrace val externalTrace: Trace? The external Trace to be used by the RPC proxy, if any.","title":"External trace"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/external-trace/#externaltrace","text":"val externalTrace: Trace? The external Trace to be used by the RPC proxy, if any.","title":"externalTrace"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/impersonated-actor/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolKey / impersonatedActor impersonatedActor val impersonatedActor: Actor? The impersonated Actor (e.g. Corda Account ID) to be used by the RPC proxy, if any.","title":"Impersonated actor"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/impersonated-actor/#impersonatedactor","text":"val impersonatedActor: Actor? The impersonated Actor (e.g. Corda Account ID) to be used by the RPC proxy, if any.","title":"impersonatedActor"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/node-name/","text":"com.github.manosbatsis.corda.rpc.poolboy / PoolKey / nodeName nodeName val nodeName: String The string representation of the node legal identity CordaX500Name or other node name key per your configuration implementation, e.g. application.properties key, database primary key or other business key etc. It is recommended that your RpcConfigurationService implementation supports both.","title":"Node name"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy/-pool-key/node-name/#nodename","text":"val nodeName: String The string representation of the node legal identity CordaX500Name or other node name key per your configuration implementation, e.g. application.properties key, database primary key or other business key etc. It is recommended that your RpcConfigurationService implementation supports both.","title":"nodeName"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/","text":"com.github.manosbatsis.corda.rpc.poolboy.annotation Package com.github.manosbatsis.corda.rpc.poolboy.annotation Annotations Name Summary AllOpen annotation class AllOpen For Kotlin All Open compiler plugin NoArgs annotation class NoArgs For Kotlin No Args compiler plugin","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/#package-comgithubmanosbatsiscordarpcpoolboyannotation","text":"","title":"Package com.github.manosbatsis.corda.rpc.poolboy.annotation"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/#annotations","text":"Name Summary AllOpen annotation class AllOpen For Kotlin All Open compiler plugin NoArgs annotation class NoArgs For Kotlin No Args compiler plugin","title":"Annotations"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-all-open/","text":"com.github.manosbatsis.corda.rpc.poolboy.annotation / AllOpen AllOpen annotation class AllOpen For Kotlin All Open compiler plugin Constructors Name Summary init AllOpen() For Kotlin All Open compiler plugin","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-all-open/#allopen","text":"annotation class AllOpen For Kotlin All Open compiler plugin","title":"AllOpen"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-all-open/#constructors","text":"Name Summary init AllOpen() For Kotlin All Open compiler plugin","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-all-open/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.annotation / AllOpen / init init AllOpen() For Kotlin All Open compiler plugin","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-all-open/-init-/#init","text":"AllOpen() For Kotlin All Open compiler plugin","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-no-args/","text":"com.github.manosbatsis.corda.rpc.poolboy.annotation / NoArgs NoArgs annotation class NoArgs For Kotlin No Args compiler plugin Constructors Name Summary init NoArgs() For Kotlin No Args compiler plugin","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-no-args/#noargs","text":"annotation class NoArgs For Kotlin No Args compiler plugin","title":"NoArgs"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-no-args/#constructors","text":"Name Summary init NoArgs() For Kotlin No Args compiler plugin","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-no-args/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.annotation / NoArgs / init init NoArgs() For Kotlin No Args compiler plugin","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.annotation/-no-args/-init-/#init","text":"NoArgs() For Kotlin No Args compiler plugin","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/","text":"com.github.manosbatsis.corda.rpc.poolboy.config Package com.github.manosbatsis.corda.rpc.poolboy.config Types Name Summary GenericKeyedObjectPoolConfigData data class GenericKeyedObjectPoolConfigData Data class version of GenericKeyedObjectPoolConfig NodeParams data class NodeParams Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties PoolParams data class PoolParams Provides configuration parameters for RPC pooling RpcClientsMode enum class RpcClientsMode RpcConfigurationService interface RpcConfigurationService Provides RPC pool and connection information for nodes. Can be fixed or fully dynamic, e.g. based on a properties file or database connection respectively.","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/#package-comgithubmanosbatsiscordarpcpoolboyconfig","text":"","title":"Package com.github.manosbatsis.corda.rpc.poolboy.config"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/#types","text":"Name Summary GenericKeyedObjectPoolConfigData data class GenericKeyedObjectPoolConfigData Data class version of GenericKeyedObjectPoolConfig NodeParams data class NodeParams Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties PoolParams data class PoolParams Provides configuration parameters for RPC pooling RpcClientsMode enum class RpcClientsMode RpcConfigurationService interface RpcConfigurationService Provides RPC pool and connection information for nodes. Can be fixed or fully dynamic, e.g. based on a properties file or database connection respectively.","title":"Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / GenericKeyedObjectPoolConfigData GenericKeyedObjectPoolConfigData data class GenericKeyedObjectPoolConfigData Data class version of GenericKeyedObjectPoolConfig Constructors Name Summary init GenericKeyedObjectPoolConfigData(minIdlePerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MIN_IDLE_PER_KEY, maxIdlePerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_IDLE_PER_KEY, maxTotalPerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_TOTAL_PER_KEY, maxTotal: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_TOTAL) Data class version of GenericKeyedObjectPoolConfig Properties Name Summary maxIdlePerKey var maxIdlePerKey: Int maxTotal var maxTotal: Int maxTotalPerKey var maxTotalPerKey: Int minIdlePerKey var minIdlePerKey: Int","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/#generickeyedobjectpoolconfigdata","text":"data class GenericKeyedObjectPoolConfigData Data class version of GenericKeyedObjectPoolConfig","title":"GenericKeyedObjectPoolConfigData"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/#constructors","text":"Name Summary init GenericKeyedObjectPoolConfigData(minIdlePerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MIN_IDLE_PER_KEY, maxIdlePerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_IDLE_PER_KEY, maxTotalPerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_TOTAL_PER_KEY, maxTotal: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_TOTAL) Data class version of GenericKeyedObjectPoolConfig","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/#properties","text":"Name Summary maxIdlePerKey var maxIdlePerKey: Int maxTotal var maxTotal: Int maxTotalPerKey var maxTotalPerKey: Int minIdlePerKey var minIdlePerKey: Int","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / GenericKeyedObjectPoolConfigData / init init GenericKeyedObjectPoolConfigData(minIdlePerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MIN_IDLE_PER_KEY, maxIdlePerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_IDLE_PER_KEY, maxTotalPerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_TOTAL_PER_KEY, maxTotal: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_TOTAL) Data class version of GenericKeyedObjectPoolConfig","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/-init-/#init","text":"GenericKeyedObjectPoolConfigData(minIdlePerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MIN_IDLE_PER_KEY, maxIdlePerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_IDLE_PER_KEY, maxTotalPerKey: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_TOTAL_PER_KEY, maxTotal: Int = GenericKeyedObjectPoolConfig.DEFAULT_MAX_TOTAL) Data class version of GenericKeyedObjectPoolConfig","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/max-idle-per-key/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / GenericKeyedObjectPoolConfigData / maxIdlePerKey maxIdlePerKey var maxIdlePerKey: Int","title":"Max idle per key"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/max-idle-per-key/#maxidleperkey","text":"var maxIdlePerKey: Int","title":"maxIdlePerKey"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/max-total-per-key/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / GenericKeyedObjectPoolConfigData / maxTotalPerKey maxTotalPerKey var maxTotalPerKey: Int","title":"Max total per key"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/max-total-per-key/#maxtotalperkey","text":"var maxTotalPerKey: Int","title":"maxTotalPerKey"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/max-total/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / GenericKeyedObjectPoolConfigData / maxTotal maxTotal var maxTotal: Int","title":"Max total"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/max-total/#maxtotal","text":"var maxTotal: Int","title":"maxTotal"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/min-idle-per-key/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / GenericKeyedObjectPoolConfigData / minIdlePerKey minIdlePerKey var minIdlePerKey: Int","title":"Min idle per key"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-generic-keyed-object-pool-config-data/min-idle-per-key/#minidleperkey","text":"var minIdlePerKey: Int","title":"minIdlePerKey"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams NodeParams data class NodeParams Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties Constructors Name Summary init NodeParams(partyName: String? = null, username: String? = null, password: String? = null, address: String? = null, adminAddress: String? = null, eager: Boolean? = null, trustStorePath: String? = null, trustStorePassword: String? = null, trustStoreProvider: String = \"JKS\", disableGracefulReconnect: Boolean? = null, connectionMaxRetryInterval: Duration? = null, connectionRetryInterval: Duration? = null, connectionRetryIntervalMultiplier: Double? = null, deduplicationCacheExpiry: Duration? = null, maxFileSize: Int? = null, maxReconnectAttempts: Int? = null, minimumServerProtocolVersion: Int? = null, observationExecutorPoolSize: Int? = null, reapInterval: Duration? = null, trackRpcCallSites: Boolean? = null, skipInfo: Boolean? = null, customSerializers: Set SerializationCustomSerializer *, * ? = null) Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties Properties Name Summary address var address: String? Node RPC address adminAddress var adminAddress: String? Node administration RPC address connectionMaxRetryInterval var connectionMaxRetryInterval: Duration? The maximum retry interval for re-connections. The client will retry connections if the host is lost with ever increasing spacing until the max is reached. The default is 3 minutes. connectionRetryInterval var connectionRetryInterval: Duration? The base retry interval for reconnection attempts. The default is 5 seconds. connectionRetryIntervalMultiplier var connectionRetryIntervalMultiplier: Double? The retry interval multiplier for exponential backoff. The default is 1.5 customSerializers var customSerializers: Set SerializationCustomSerializer *, * ? deduplicationCacheExpiry var deduplicationCacheExpiry: Duration? The cache expiry of a deduplication watermark per client. Default is 1 day. disableGracefulReconnect var disableGracefulReconnect: Boolean? Whether to use GracefulReconnect (4.3+) eager var eager: Boolean? Whether to use an eagerly initialised NodeRpcConnection implementation. Default is false . Setting to true will probably break integration tests so you will need separate application.properties for those. maxFileSize var maxFileSize: Int? Maximum size of RPC responses, in bytes. Default is 10mb. maxReconnectAttempts var maxReconnectAttempts: Int? Maximum reconnect attempts on failover or disconnection. The default is -1 which means unlimited. minimumServerProtocolVersion var minimumServerProtocolVersion: Int? The minimum protocol version required from the server. This is equivalent to the node s platform version number. If this minimum version is not met, an exception will be thrown at startup. If you use features introduced in a later version, you can bump this to match the platform version you need and get an early check that runs before you do anything. observationExecutorPoolSize var observationExecutorPoolSize: Int? The number of threads to use for observations for executing Observable.onNext. This only has any effect if observableExecutor is null (which is the default). The default is 4. partyName var partyName: String? The x500 name to use for the node when testing password var password: String? RPC user password reapInterval var reapInterval: Duration? The interval of unused observable reaping. Leaked Observables (unused ones) are detected using weak references and are cleaned up in batches in this interval. If set too large it will waste server side resources for this duration. If set too low it wastes client side cycles. The default is to check once per second. skipInfo var skipInfo: Boolean? Whether to skip this node from actuator trackRpcCallSites var trackRpcCallSites: Boolean? If set to true the client will track RPC call sites (default is false). If an error occurs subsequently during the RPC or in a returned Observable stream the stack trace of the originating RPC will be shown as well. Note that constructing call stacks is a moderately expensive operation. trustStorePassword var trustStorePassword: String? Corresponds to ClientRpcSslOptions.trustStorePassword trustStorePath var trustStorePath: String? Corresponds to ClientRpcSslOptions.trustStorePath trustStoreProvider var trustStoreProvider: String Corresponds to ClientRpcSslOptions.trustStoreProvider username var username: String? RPC user Companion Object Properties Name Summary DEFAULT val DEFAULT: NodeParams NODENAME_CORDFORM val NODENAME_CORDFORM: String NODENAME_DEFAULT val NODENAME_DEFAULT: String Companion Object Functions Name Summary mergeParams fun mergeParams(partialParams: NodeParams , defaults: NodeParams ? = null, skipValidation: Boolean = false): NodeParams Merge in order of precedence, with DEFAULT being the implicit additional default options","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/#nodeparams","text":"data class NodeParams Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties","title":"NodeParams"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/#constructors","text":"Name Summary init NodeParams(partyName: String? = null, username: String? = null, password: String? = null, address: String? = null, adminAddress: String? = null, eager: Boolean? = null, trustStorePath: String? = null, trustStorePassword: String? = null, trustStoreProvider: String = \"JKS\", disableGracefulReconnect: Boolean? = null, connectionMaxRetryInterval: Duration? = null, connectionRetryInterval: Duration? = null, connectionRetryIntervalMultiplier: Double? = null, deduplicationCacheExpiry: Duration? = null, maxFileSize: Int? = null, maxReconnectAttempts: Int? = null, minimumServerProtocolVersion: Int? = null, observationExecutorPoolSize: Int? = null, reapInterval: Duration? = null, trackRpcCallSites: Boolean? = null, skipInfo: Boolean? = null, customSerializers: Set SerializationCustomSerializer *, * ? = null) Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/#properties","text":"Name Summary address var address: String? Node RPC address adminAddress var adminAddress: String? Node administration RPC address connectionMaxRetryInterval var connectionMaxRetryInterval: Duration? The maximum retry interval for re-connections. The client will retry connections if the host is lost with ever increasing spacing until the max is reached. The default is 3 minutes. connectionRetryInterval var connectionRetryInterval: Duration? The base retry interval for reconnection attempts. The default is 5 seconds. connectionRetryIntervalMultiplier var connectionRetryIntervalMultiplier: Double? The retry interval multiplier for exponential backoff. The default is 1.5 customSerializers var customSerializers: Set SerializationCustomSerializer *, * ? deduplicationCacheExpiry var deduplicationCacheExpiry: Duration? The cache expiry of a deduplication watermark per client. Default is 1 day. disableGracefulReconnect var disableGracefulReconnect: Boolean? Whether to use GracefulReconnect (4.3+) eager var eager: Boolean? Whether to use an eagerly initialised NodeRpcConnection implementation. Default is false . Setting to true will probably break integration tests so you will need separate application.properties for those. maxFileSize var maxFileSize: Int? Maximum size of RPC responses, in bytes. Default is 10mb. maxReconnectAttempts var maxReconnectAttempts: Int? Maximum reconnect attempts on failover or disconnection. The default is -1 which means unlimited. minimumServerProtocolVersion var minimumServerProtocolVersion: Int? The minimum protocol version required from the server. This is equivalent to the node s platform version number. If this minimum version is not met, an exception will be thrown at startup. If you use features introduced in a later version, you can bump this to match the platform version you need and get an early check that runs before you do anything. observationExecutorPoolSize var observationExecutorPoolSize: Int? The number of threads to use for observations for executing Observable.onNext. This only has any effect if observableExecutor is null (which is the default). The default is 4. partyName var partyName: String? The x500 name to use for the node when testing password var password: String? RPC user password reapInterval var reapInterval: Duration? The interval of unused observable reaping. Leaked Observables (unused ones) are detected using weak references and are cleaned up in batches in this interval. If set too large it will waste server side resources for this duration. If set too low it wastes client side cycles. The default is to check once per second. skipInfo var skipInfo: Boolean? Whether to skip this node from actuator trackRpcCallSites var trackRpcCallSites: Boolean? If set to true the client will track RPC call sites (default is false). If an error occurs subsequently during the RPC or in a returned Observable stream the stack trace of the originating RPC will be shown as well. Note that constructing call stacks is a moderately expensive operation. trustStorePassword var trustStorePassword: String? Corresponds to ClientRpcSslOptions.trustStorePassword trustStorePath var trustStorePath: String? Corresponds to ClientRpcSslOptions.trustStorePath trustStoreProvider var trustStoreProvider: String Corresponds to ClientRpcSslOptions.trustStoreProvider username var username: String? RPC user","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/#companion-object-properties","text":"Name Summary DEFAULT val DEFAULT: NodeParams NODENAME_CORDFORM val NODENAME_CORDFORM: String NODENAME_DEFAULT val NODENAME_DEFAULT: String","title":"Companion Object Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/#companion-object-functions","text":"Name Summary mergeParams fun mergeParams(partialParams: NodeParams , defaults: NodeParams ? = null, skipValidation: Boolean = false): NodeParams Merge in order of precedence, with DEFAULT being the implicit additional default options","title":"Companion Object Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/-d-e-f-a-u-l-t/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / DEFAULT DEFAULT @JvmStatic val DEFAULT: NodeParams","title":" d e f a u l t"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/-d-e-f-a-u-l-t/#default","text":"@JvmStatic val DEFAULT: NodeParams","title":"DEFAULT"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / init init NodeParams(partyName: String? = null, username: String? = null, password: String? = null, address: String? = null, adminAddress: String? = null, eager: Boolean? = null, trustStorePath: String? = null, trustStorePassword: String? = null, trustStoreProvider: String = \"JKS\", disableGracefulReconnect: Boolean? = null, connectionMaxRetryInterval: Duration? = null, connectionRetryInterval: Duration? = null, connectionRetryIntervalMultiplier: Double? = null, deduplicationCacheExpiry: Duration? = null, maxFileSize: Int? = null, maxReconnectAttempts: Int? = null, minimumServerProtocolVersion: Int? = null, observationExecutorPoolSize: Int? = null, reapInterval: Duration? = null, trackRpcCallSites: Boolean? = null, skipInfo: Boolean? = null, customSerializers: Set SerializationCustomSerializer *, * ? = null) Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/-init-/#init","text":"NodeParams(partyName: String? = null, username: String? = null, password: String? = null, address: String? = null, adminAddress: String? = null, eager: Boolean? = null, trustStorePath: String? = null, trustStorePassword: String? = null, trustStoreProvider: String = \"JKS\", disableGracefulReconnect: Boolean? = null, connectionMaxRetryInterval: Duration? = null, connectionRetryInterval: Duration? = null, connectionRetryIntervalMultiplier: Double? = null, deduplicationCacheExpiry: Duration? = null, maxFileSize: Int? = null, maxReconnectAttempts: Int? = null, minimumServerProtocolVersion: Int? = null, observationExecutorPoolSize: Int? = null, reapInterval: Duration? = null, trackRpcCallSites: Boolean? = null, skipInfo: Boolean? = null, customSerializers: Set SerializationCustomSerializer *, * ? = null) Configuration of a single node from an RPC perspective, i.e. information corresponding to RPC user credentials and an CordaRPCClientConfiguration . The DEFAULTS are taken from CordaRPCClientConfiguration.DEFAULT and can be overridden using corbeans.nodes.default.xx in your application.properties","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/-n-o-d-e-n-a-m-e_-c-o-r-d-f-o-r-m/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / NODENAME_CORDFORM NODENAME_CORDFORM @JvmStatic val NODENAME_CORDFORM: String","title":" n o d e n a m e  c o r d f o r m"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/-n-o-d-e-n-a-m-e_-c-o-r-d-f-o-r-m/#nodename_cordform","text":"@JvmStatic val NODENAME_CORDFORM: String","title":"NODENAME_CORDFORM"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/-n-o-d-e-n-a-m-e_-d-e-f-a-u-l-t/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / NODENAME_DEFAULT NODENAME_DEFAULT @JvmStatic val NODENAME_DEFAULT: String","title":" n o d e n a m e  d e f a u l t"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/-n-o-d-e-n-a-m-e_-d-e-f-a-u-l-t/#nodename_default","text":"@JvmStatic val NODENAME_DEFAULT: String","title":"NODENAME_DEFAULT"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/address/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / address address var address: String? Node RPC address","title":"Address"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/address/#address","text":"var address: String? Node RPC address","title":"address"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/admin-address/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / adminAddress adminAddress var adminAddress: String? Node administration RPC address","title":"Admin address"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/admin-address/#adminaddress","text":"var adminAddress: String? Node administration RPC address","title":"adminAddress"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/connection-max-retry-interval/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / connectionMaxRetryInterval connectionMaxRetryInterval var connectionMaxRetryInterval: Duration? The maximum retry interval for re-connections. The client will retry connections if the host is lost with ever increasing spacing until the max is reached. The default is 3 minutes.","title":"Connection max retry interval"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/connection-max-retry-interval/#connectionmaxretryinterval","text":"var connectionMaxRetryInterval: Duration? The maximum retry interval for re-connections. The client will retry connections if the host is lost with ever increasing spacing until the max is reached. The default is 3 minutes.","title":"connectionMaxRetryInterval"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/connection-retry-interval-multiplier/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / connectionRetryIntervalMultiplier connectionRetryIntervalMultiplier var connectionRetryIntervalMultiplier: Double? The retry interval multiplier for exponential backoff. The default is 1.5","title":"Connection retry interval multiplier"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/connection-retry-interval-multiplier/#connectionretryintervalmultiplier","text":"var connectionRetryIntervalMultiplier: Double? The retry interval multiplier for exponential backoff. The default is 1.5","title":"connectionRetryIntervalMultiplier"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/connection-retry-interval/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / connectionRetryInterval connectionRetryInterval var connectionRetryInterval: Duration? * The base retry interval for reconnection attempts. The default is 5 seconds.","title":"Connection retry interval"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/connection-retry-interval/#connectionretryinterval","text":"var connectionRetryInterval: Duration? * The base retry interval for reconnection attempts. The default is 5 seconds.","title":"connectionRetryInterval"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/custom-serializers/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / customSerializers customSerializers var customSerializers: Set SerializationCustomSerializer *, * ?","title":"Custom serializers"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/custom-serializers/#customserializers","text":"var customSerializers: Set SerializationCustomSerializer *, * ?","title":"customSerializers"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/deduplication-cache-expiry/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / deduplicationCacheExpiry deduplicationCacheExpiry var deduplicationCacheExpiry: Duration? The cache expiry of a deduplication watermark per client. Default is 1 day.","title":"Deduplication cache expiry"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/deduplication-cache-expiry/#deduplicationcacheexpiry","text":"var deduplicationCacheExpiry: Duration? The cache expiry of a deduplication watermark per client. Default is 1 day.","title":"deduplicationCacheExpiry"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/disable-graceful-reconnect/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / disableGracefulReconnect disableGracefulReconnect var disableGracefulReconnect: Boolean? Whether to use GracefulReconnect (4.3+)","title":"Disable graceful reconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/disable-graceful-reconnect/#disablegracefulreconnect","text":"var disableGracefulReconnect: Boolean? Whether to use GracefulReconnect (4.3+)","title":"disableGracefulReconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/eager/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / eager eager var eager: Boolean? Whether to use an eagerly initialised NodeRpcConnection implementation. Default is false . Setting to true will probably break integration tests so you will need separate application.properties for those.","title":"Eager"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/eager/#eager","text":"var eager: Boolean? Whether to use an eagerly initialised NodeRpcConnection implementation. Default is false . Setting to true will probably break integration tests so you will need separate application.properties for those.","title":"eager"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/max-file-size/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / maxFileSize maxFileSize var maxFileSize: Int? Maximum size of RPC responses, in bytes. Default is 10mb.","title":"Max file size"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/max-file-size/#maxfilesize","text":"var maxFileSize: Int? Maximum size of RPC responses, in bytes. Default is 10mb.","title":"maxFileSize"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/max-reconnect-attempts/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / maxReconnectAttempts maxReconnectAttempts var maxReconnectAttempts: Int? Maximum reconnect attempts on failover or disconnection. The default is -1 which means unlimited.","title":"Max reconnect attempts"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/max-reconnect-attempts/#maxreconnectattempts","text":"var maxReconnectAttempts: Int? Maximum reconnect attempts on failover or disconnection. The default is -1 which means unlimited.","title":"maxReconnectAttempts"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/merge-params/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / mergeParams mergeParams @JvmStatic fun mergeParams(partialParams: NodeParams , defaults: NodeParams ? = null, skipValidation: Boolean = false): NodeParams Merge in order of precedence, with DEFAULT being the implicit additional default options","title":"Merge params"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/merge-params/#mergeparams","text":"@JvmStatic fun mergeParams(partialParams: NodeParams , defaults: NodeParams ? = null, skipValidation: Boolean = false): NodeParams Merge in order of precedence, with DEFAULT being the implicit additional default options","title":"mergeParams"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/minimum-server-protocol-version/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / minimumServerProtocolVersion minimumServerProtocolVersion var minimumServerProtocolVersion: Int? The minimum protocol version required from the server. This is equivalent to the node s platform version number. If this minimum version is not met, an exception will be thrown at startup. If you use features introduced in a later version, you can bump this to match the platform version you need and get an early check that runs before you do anything.","title":"Minimum server protocol version"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/minimum-server-protocol-version/#minimumserverprotocolversion","text":"var minimumServerProtocolVersion: Int? The minimum protocol version required from the server. This is equivalent to the node s platform version number. If this minimum version is not met, an exception will be thrown at startup. If you use features introduced in a later version, you can bump this to match the platform version you need and get an early check that runs before you do anything.","title":"minimumServerProtocolVersion"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/observation-executor-pool-size/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / observationExecutorPoolSize observationExecutorPoolSize var observationExecutorPoolSize: Int? The number of threads to use for observations for executing Observable.onNext. This only has any effect if observableExecutor is null (which is the default). The default is 4.","title":"Observation executor pool size"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/observation-executor-pool-size/#observationexecutorpoolsize","text":"var observationExecutorPoolSize: Int? The number of threads to use for observations for executing Observable.onNext. This only has any effect if observableExecutor is null (which is the default). The default is 4.","title":"observationExecutorPoolSize"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/party-name/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / partyName partyName var partyName: String? The x500 name to use for the node when testing","title":"Party name"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/party-name/#partyname","text":"var partyName: String? The x500 name to use for the node when testing","title":"partyName"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/password/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / password password var password: String? RPC user password","title":"Password"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/password/#password","text":"var password: String? RPC user password","title":"password"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/reap-interval/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / reapInterval reapInterval var reapInterval: Duration? The interval of unused observable reaping. Leaked Observables (unused ones) are detected using weak references and are cleaned up in batches in this interval. If set too large it will waste server side resources for this duration. If set too low it wastes client side cycles. The default is to check once per second.","title":"Reap interval"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/reap-interval/#reapinterval","text":"var reapInterval: Duration? The interval of unused observable reaping. Leaked Observables (unused ones) are detected using weak references and are cleaned up in batches in this interval. If set too large it will waste server side resources for this duration. If set too low it wastes client side cycles. The default is to check once per second.","title":"reapInterval"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/skip-info/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / skipInfo skipInfo var skipInfo: Boolean? Whether to skip this node from actuator","title":"Skip info"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/skip-info/#skipinfo","text":"var skipInfo: Boolean? Whether to skip this node from actuator","title":"skipInfo"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/track-rpc-call-sites/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / trackRpcCallSites trackRpcCallSites var trackRpcCallSites: Boolean? If set to true the client will track RPC call sites (default is false). If an error occurs subsequently during the RPC or in a returned Observable stream the stack trace of the originating RPC will be shown as well. Note that constructing call stacks is a moderately expensive operation.","title":"Track rpc call sites"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/track-rpc-call-sites/#trackrpccallsites","text":"var trackRpcCallSites: Boolean? If set to true the client will track RPC call sites (default is false). If an error occurs subsequently during the RPC or in a returned Observable stream the stack trace of the originating RPC will be shown as well. Note that constructing call stacks is a moderately expensive operation.","title":"trackRpcCallSites"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/trust-store-password/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / trustStorePassword trustStorePassword var trustStorePassword: String? Corresponds to ClientRpcSslOptions.trustStorePassword","title":"Trust store password"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/trust-store-password/#truststorepassword","text":"var trustStorePassword: String? Corresponds to ClientRpcSslOptions.trustStorePassword","title":"trustStorePassword"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/trust-store-path/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / trustStorePath trustStorePath var trustStorePath: String? Corresponds to ClientRpcSslOptions.trustStorePath","title":"Trust store path"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/trust-store-path/#truststorepath","text":"var trustStorePath: String? Corresponds to ClientRpcSslOptions.trustStorePath","title":"trustStorePath"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/trust-store-provider/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / trustStoreProvider trustStoreProvider var trustStoreProvider: String Corresponds to ClientRpcSslOptions.trustStoreProvider","title":"Trust store provider"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/trust-store-provider/#truststoreprovider","text":"var trustStoreProvider: String Corresponds to ClientRpcSslOptions.trustStoreProvider","title":"trustStoreProvider"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/username/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / NodeParams / username username var username: String? RPC user","title":"Username"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-node-params/username/#username","text":"var username: String? RPC user","title":"username"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / PoolParams PoolParams data class PoolParams Provides configuration parameters for RPC pooling Constructors Name Summary init PoolParams(baseNodeParams: PoolParams )``PoolParams(rpcClientsMode: RpcClientsMode ? = null, rpcClientPool: GenericKeyedObjectPoolConfigData ? = null, rpcOpsPool: GenericKeyedObjectPoolConfigData ? = null) Provides configuration parameters for RPC pooling Properties Name Summary rpcClientPool var rpcClientPool: GenericKeyedObjectPoolConfigData ? RPC client pool configuration, ignored if rpcClientPoolDisable is true rpcClientsMode var rpcClientsMode: RpcClientsMode ? Whether to use shared, pooled or dedicated RPC Clients, default is shared rpcOpsPool var rpcOpsPool: GenericKeyedObjectPoolConfigData ? RPC Ops pool configuration Companion Object Properties Name Summary DEFAULT val DEFAULT: PoolParams Companion Object Functions Name Summary mergeParams fun mergeParams(partialParams: PoolParams , defaults: PoolParams ?): PoolParams Merge in order of precedence, with NodeParams.DEFAULT being the implicit last option","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/#poolparams","text":"data class PoolParams Provides configuration parameters for RPC pooling","title":"PoolParams"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/#constructors","text":"Name Summary init PoolParams(baseNodeParams: PoolParams )``PoolParams(rpcClientsMode: RpcClientsMode ? = null, rpcClientPool: GenericKeyedObjectPoolConfigData ? = null, rpcOpsPool: GenericKeyedObjectPoolConfigData ? = null) Provides configuration parameters for RPC pooling","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/#properties","text":"Name Summary rpcClientPool var rpcClientPool: GenericKeyedObjectPoolConfigData ? RPC client pool configuration, ignored if rpcClientPoolDisable is true rpcClientsMode var rpcClientsMode: RpcClientsMode ? Whether to use shared, pooled or dedicated RPC Clients, default is shared rpcOpsPool var rpcOpsPool: GenericKeyedObjectPoolConfigData ? RPC Ops pool configuration","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/#companion-object-properties","text":"Name Summary DEFAULT val DEFAULT: PoolParams","title":"Companion Object Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/#companion-object-functions","text":"Name Summary mergeParams fun mergeParams(partialParams: PoolParams , defaults: PoolParams ?): PoolParams Merge in order of precedence, with NodeParams.DEFAULT being the implicit last option","title":"Companion Object Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/-d-e-f-a-u-l-t/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / PoolParams / DEFAULT DEFAULT @JvmStatic val DEFAULT: PoolParams","title":" d e f a u l t"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/-d-e-f-a-u-l-t/#default","text":"@JvmStatic val DEFAULT: PoolParams","title":"DEFAULT"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / PoolParams / init init PoolParams(baseNodeParams: PoolParams )``PoolParams(rpcClientsMode: RpcClientsMode ? = null, rpcClientPool: GenericKeyedObjectPoolConfigData ? = null, rpcOpsPool: GenericKeyedObjectPoolConfigData ? = null) Provides configuration parameters for RPC pooling","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/-init-/#init","text":"PoolParams(baseNodeParams: PoolParams )``PoolParams(rpcClientsMode: RpcClientsMode ? = null, rpcClientPool: GenericKeyedObjectPoolConfigData ? = null, rpcOpsPool: GenericKeyedObjectPoolConfigData ? = null) Provides configuration parameters for RPC pooling","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/merge-params/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / PoolParams / mergeParams mergeParams @JvmStatic fun mergeParams(partialParams: PoolParams , defaults: PoolParams ?): PoolParams Merge in order of precedence, with NodeParams.DEFAULT being the implicit last option","title":"Merge params"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/merge-params/#mergeparams","text":"@JvmStatic fun mergeParams(partialParams: PoolParams , defaults: PoolParams ?): PoolParams Merge in order of precedence, with NodeParams.DEFAULT being the implicit last option","title":"mergeParams"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/rpc-client-pool/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / PoolParams / rpcClientPool rpcClientPool var rpcClientPool: GenericKeyedObjectPoolConfigData ? RPC client pool configuration, ignored if rpcClientPoolDisable is true","title":"Rpc client pool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/rpc-client-pool/#rpcclientpool","text":"var rpcClientPool: GenericKeyedObjectPoolConfigData ? RPC client pool configuration, ignored if rpcClientPoolDisable is true","title":"rpcClientPool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/rpc-clients-mode/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / PoolParams / rpcClientsMode rpcClientsMode var rpcClientsMode: RpcClientsMode ? Whether to use shared, pooled or dedicated RPC Clients, default is shared","title":"Rpc clients mode"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/rpc-clients-mode/#rpcclientsmode","text":"var rpcClientsMode: RpcClientsMode ? Whether to use shared, pooled or dedicated RPC Clients, default is shared","title":"rpcClientsMode"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/rpc-ops-pool/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / PoolParams / rpcOpsPool rpcOpsPool var rpcOpsPool: GenericKeyedObjectPoolConfigData ? RPC Ops pool configuration","title":"Rpc ops pool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-pool-params/rpc-ops-pool/#rpcopspool","text":"var rpcOpsPool: GenericKeyedObjectPoolConfigData ? RPC Ops pool configuration","title":"rpcOpsPool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-clients-mode/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcClientsMode RpcClientsMode enum class RpcClientsMode Enum Values Name Summary SHARED POOLED DEDICATED","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-clients-mode/#rpcclientsmode","text":"enum class RpcClientsMode","title":"RpcClientsMode"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-clients-mode/#enum-values","text":"Name Summary SHARED POOLED DEDICATED","title":"Enum Values"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-clients-mode/-d-e-d-i-c-a-t-e-d/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcClientsMode / DEDICATED DEDICATED DEDICATED","title":" d e d i c a t e d"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-clients-mode/-d-e-d-i-c-a-t-e-d/#dedicated","text":"DEDICATED","title":"DEDICATED"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-clients-mode/-p-o-o-l-e-d/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcClientsMode / POOLED POOLED POOLED","title":" p o o l e d"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-clients-mode/-p-o-o-l-e-d/#pooled","text":"POOLED","title":"POOLED"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-clients-mode/-s-h-a-r-e-d/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcClientsMode / SHARED SHARED SHARED","title":" s h a r e d"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-clients-mode/-s-h-a-r-e-d/#shared","text":"SHARED","title":"SHARED"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService RpcConfigurationService interface RpcConfigurationService Provides RPC pool and connection information for nodes. Can be fixed or fully dynamic, e.g. based on a properties file or database connection respectively. Functions Name Summary buildPoolKey abstract fun buildPoolKey(nodeName: String): PoolKey Build a PoolKey for the given node name. Override to customise PoolKey.externalTrace and PoolKey.impersonatedActor getAllRpcNodeParams abstract fun getAllRpcNodeParams(): Map String, NodeParams Read-only snapshot of all RPC connection configuration (i.e. NodeParams ) by node name per your configuration implementation, e.g. application.properties key, database primary key etc. getCustomSerializers open fun getCustomSerializers(cordapPackages: List String ): Set SerializationCustomSerializer *, * ? Custom serializer types found in the configured cordapp packages. Override to bypass classpath scanning and improve search discovery performance. getGracefulReconnect open fun getGracefulReconnect(nodeParams: NodeParams ): GracefulReconnect Override to change the GracefulReconnect implementation to use when NodeParams.disableGracefulReconnect is false . getNodeRpcConnectionConfig open fun getNodeRpcConnectionConfig(key: PoolKey ): NodeRpcConnectionConfig Get the RPC connection configuration for the given key. Override to customise further. getRpcNodeParams abstract fun getRpcNodeParams(nodeName: String): NodeParams Get the RPC connection configuration (i.e. NodeParams ) corresponding to the given nodeName per your configuration implementation, e.g. application.properties key, database primary key etc. getRpcPoolParams abstract fun getRpcPoolParams(): PoolParams Get the RPC pool configuration Companion Object Properties Name Summary partyNameIsRequired const val partyNameIsRequired: String rpcConnectionForNodeNotFound const val rpcConnectionForNodeNotFound: String","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/#rpcconfigurationservice","text":"interface RpcConfigurationService Provides RPC pool and connection information for nodes. Can be fixed or fully dynamic, e.g. based on a properties file or database connection respectively.","title":"RpcConfigurationService"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/#functions","text":"Name Summary buildPoolKey abstract fun buildPoolKey(nodeName: String): PoolKey Build a PoolKey for the given node name. Override to customise PoolKey.externalTrace and PoolKey.impersonatedActor getAllRpcNodeParams abstract fun getAllRpcNodeParams(): Map String, NodeParams Read-only snapshot of all RPC connection configuration (i.e. NodeParams ) by node name per your configuration implementation, e.g. application.properties key, database primary key etc. getCustomSerializers open fun getCustomSerializers(cordapPackages: List String ): Set SerializationCustomSerializer *, * ? Custom serializer types found in the configured cordapp packages. Override to bypass classpath scanning and improve search discovery performance. getGracefulReconnect open fun getGracefulReconnect(nodeParams: NodeParams ): GracefulReconnect Override to change the GracefulReconnect implementation to use when NodeParams.disableGracefulReconnect is false . getNodeRpcConnectionConfig open fun getNodeRpcConnectionConfig(key: PoolKey ): NodeRpcConnectionConfig Get the RPC connection configuration for the given key. Override to customise further. getRpcNodeParams abstract fun getRpcNodeParams(nodeName: String): NodeParams Get the RPC connection configuration (i.e. NodeParams ) corresponding to the given nodeName per your configuration implementation, e.g. application.properties key, database primary key etc. getRpcPoolParams abstract fun getRpcPoolParams(): PoolParams Get the RPC pool configuration","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/#companion-object-properties","text":"Name Summary partyNameIsRequired const val partyNameIsRequired: String rpcConnectionForNodeNotFound const val rpcConnectionForNodeNotFound: String","title":"Companion Object Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/build-pool-key/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService / buildPoolKey buildPoolKey abstract fun buildPoolKey(nodeName: String): PoolKey Build a PoolKey for the given node name. Override to customise PoolKey.externalTrace and PoolKey.impersonatedActor","title":"Build pool key"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/build-pool-key/#buildpoolkey","text":"abstract fun buildPoolKey(nodeName: String): PoolKey Build a PoolKey for the given node name. Override to customise PoolKey.externalTrace and PoolKey.impersonatedActor","title":"buildPoolKey"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-all-rpc-node-params/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService / getAllRpcNodeParams getAllRpcNodeParams abstract fun getAllRpcNodeParams(): Map String, NodeParams Read-only snapshot of all RPC connection configuration (i.e. NodeParams ) by node name per your configuration implementation, e.g. application.properties key, database primary key etc. Note: the implementor is solely responsible for any caching while retrieving results","title":"Get all rpc node params"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-all-rpc-node-params/#getallrpcnodeparams","text":"abstract fun getAllRpcNodeParams(): Map String, NodeParams Read-only snapshot of all RPC connection configuration (i.e. NodeParams ) by node name per your configuration implementation, e.g. application.properties key, database primary key etc. Note: the implementor is solely responsible for any caching while retrieving results","title":"getAllRpcNodeParams"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-custom-serializers/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService / getCustomSerializers getCustomSerializers open fun getCustomSerializers(cordapPackages: List String ): Set SerializationCustomSerializer *, * ? Custom serializer types found in the configured cordapp packages. Override to bypass classpath scanning and improve search discovery performance.","title":"Get custom serializers"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-custom-serializers/#getcustomserializers","text":"open fun getCustomSerializers(cordapPackages: List String ): Set SerializationCustomSerializer *, * ? Custom serializer types found in the configured cordapp packages. Override to bypass classpath scanning and improve search discovery performance.","title":"getCustomSerializers"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-graceful-reconnect/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService / getGracefulReconnect getGracefulReconnect open fun getGracefulReconnect(nodeParams: NodeParams ): GracefulReconnect Override to change the GracefulReconnect implementation to use when NodeParams.disableGracefulReconnect is false .","title":"Get graceful reconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-graceful-reconnect/#getgracefulreconnect","text":"open fun getGracefulReconnect(nodeParams: NodeParams ): GracefulReconnect Override to change the GracefulReconnect implementation to use when NodeParams.disableGracefulReconnect is false .","title":"getGracefulReconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-node-rpc-connection-config/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService / getNodeRpcConnectionConfig getNodeRpcConnectionConfig open fun getNodeRpcConnectionConfig(key: PoolKey ): NodeRpcConnectionConfig Get the RPC connection configuration for the given key. Override to customise further.","title":"Get node rpc connection config"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-node-rpc-connection-config/#getnoderpcconnectionconfig","text":"open fun getNodeRpcConnectionConfig(key: PoolKey ): NodeRpcConnectionConfig Get the RPC connection configuration for the given key. Override to customise further.","title":"getNodeRpcConnectionConfig"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-rpc-node-params/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService / getRpcNodeParams getRpcNodeParams abstract fun getRpcNodeParams(nodeName: String): NodeParams Get the RPC connection configuration (i.e. NodeParams ) corresponding to the given nodeName per your configuration implementation, e.g. application.properties key, database primary key etc. Note: the implementor is solely responsible for any caching while retrieving results","title":"Get rpc node params"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-rpc-node-params/#getrpcnodeparams","text":"abstract fun getRpcNodeParams(nodeName: String): NodeParams Get the RPC connection configuration (i.e. NodeParams ) corresponding to the given nodeName per your configuration implementation, e.g. application.properties key, database primary key etc. Note: the implementor is solely responsible for any caching while retrieving results","title":"getRpcNodeParams"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-rpc-pool-params/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService / getRpcPoolParams getRpcPoolParams abstract fun getRpcPoolParams(): PoolParams Get the RPC pool configuration","title":"Get rpc pool params"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/get-rpc-pool-params/#getrpcpoolparams","text":"abstract fun getRpcPoolParams(): PoolParams Get the RPC pool configuration","title":"getRpcPoolParams"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/party-name-is-required/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService / partyNameIsRequired partyNameIsRequired const val partyNameIsRequired: String","title":"Party name is required"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/party-name-is-required/#partynameisrequired","text":"const val partyNameIsRequired: String","title":"partyNameIsRequired"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/rpc-connection-for-node-not-found/","text":"com.github.manosbatsis.corda.rpc.poolboy.config / RpcConfigurationService / rpcConnectionForNodeNotFound rpcConnectionForNodeNotFound const val rpcConnectionForNodeNotFound: String","title":"Rpc connection for node not found"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.config/-rpc-configuration-service/rpc-connection-for-node-not-found/#rpcconnectionfornodenotfound","text":"const val rpcConnectionForNodeNotFound: String","title":"rpcConnectionForNodeNotFound"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection Package com.github.manosbatsis.corda.rpc.poolboy.connection Types Name Summary AbstractNodeRpcConnection abstract class AbstractNodeRpcConnection : NodeRpcConnection Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient EagerNodeRpcConnection open class EagerNodeRpcConnection : AbstractNodeRpcConnection Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient LazyNodeRpcConnection open class LazyNodeRpcConnection : AbstractNodeRpcConnection Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient NodeRpcConnection interface NodeRpcConnection Wraps a Corda Node RPC connection proxy","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/#package-comgithubmanosbatsiscordarpcpoolboyconnection","text":"","title":"Package com.github.manosbatsis.corda.rpc.poolboy.connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/#types","text":"Name Summary AbstractNodeRpcConnection abstract class AbstractNodeRpcConnection : NodeRpcConnection Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient EagerNodeRpcConnection open class EagerNodeRpcConnection : AbstractNodeRpcConnection Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient LazyNodeRpcConnection open class LazyNodeRpcConnection : AbstractNodeRpcConnection Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient NodeRpcConnection interface NodeRpcConnection Wraps a Corda Node RPC connection proxy","title":"Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / AbstractNodeRpcConnection AbstractNodeRpcConnection abstract class AbstractNodeRpcConnection : NodeRpcConnection Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient Constructors Name Summary init AbstractNodeRpcConnection(config: NodeRpcConnectionConfig , rpcClient: CordaRPCClient = createCordaRPCClient(config.nodeParams)) Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient Properties Name Summary rpcClient val rpcClient: CordaRPCClient Inherited Properties Name Summary proxy abstract val proxy: CordaRPCOps Obtain a CordaRPCOps proxy for this connection Functions Name Summary createProxy fun createProxy(): CordaRPCOps Attempt to obtain a CordaRPCConnection , retry five times with a five second delay in case of an RPCException error onPreDestroy fun onPreDestroy(): Unit Try cleaning up on PreDestroy skipInfo open fun skipInfo(): Boolean Controls ignoring this node when providing node infos Inheritors Name Summary EagerNodeRpcConnection open class EagerNodeRpcConnection : AbstractNodeRpcConnection Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient LazyNodeRpcConnection open class LazyNodeRpcConnection : AbstractNodeRpcConnection Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/#abstractnoderpcconnection","text":"abstract class AbstractNodeRpcConnection : NodeRpcConnection Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"AbstractNodeRpcConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/#constructors","text":"Name Summary init AbstractNodeRpcConnection(config: NodeRpcConnectionConfig , rpcClient: CordaRPCClient = createCordaRPCClient(config.nodeParams)) Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/#properties","text":"Name Summary rpcClient val rpcClient: CordaRPCClient","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/#inherited-properties","text":"Name Summary proxy abstract val proxy: CordaRPCOps Obtain a CordaRPCOps proxy for this connection","title":"Inherited Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/#functions","text":"Name Summary createProxy fun createProxy(): CordaRPCOps Attempt to obtain a CordaRPCConnection , retry five times with a five second delay in case of an RPCException error onPreDestroy fun onPreDestroy(): Unit Try cleaning up on PreDestroy skipInfo open fun skipInfo(): Boolean Controls ignoring this node when providing node infos","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/#inheritors","text":"Name Summary EagerNodeRpcConnection open class EagerNodeRpcConnection : AbstractNodeRpcConnection Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient LazyNodeRpcConnection open class LazyNodeRpcConnection : AbstractNodeRpcConnection Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"Inheritors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / AbstractNodeRpcConnection / init init AbstractNodeRpcConnection(config: NodeRpcConnectionConfig , rpcClient: CordaRPCClient = createCordaRPCClient(config.nodeParams)) Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/-init-/#init","text":"AbstractNodeRpcConnection(config: NodeRpcConnectionConfig , rpcClient: CordaRPCClient = createCordaRPCClient(config.nodeParams)) Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/create-proxy/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / AbstractNodeRpcConnection / createProxy createProxy fun createProxy(): CordaRPCOps Attempt to obtain a CordaRPCConnection , retry five times with a five second delay in case of an RPCException error","title":"Create proxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/create-proxy/#createproxy","text":"fun createProxy(): CordaRPCOps Attempt to obtain a CordaRPCConnection , retry five times with a five second delay in case of an RPCException error","title":"createProxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/on-pre-destroy/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / AbstractNodeRpcConnection / onPreDestroy onPreDestroy @PreDestroy fun onPreDestroy(): Unit Try cleaning up on PreDestroy","title":"On pre destroy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/on-pre-destroy/#onpredestroy","text":"@PreDestroy fun onPreDestroy(): Unit Try cleaning up on PreDestroy","title":"onPreDestroy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/rpc-client/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / AbstractNodeRpcConnection / rpcClient rpcClient val rpcClient: CordaRPCClient","title":"Rpc client"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/rpc-client/#rpcclient","text":"val rpcClient: CordaRPCClient","title":"rpcClient"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/skip-info/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / AbstractNodeRpcConnection / skipInfo skipInfo open fun skipInfo(): Boolean Overrides NodeRpcConnection.skipInfo Controls ignoring this node when providing node infos","title":"Skip info"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-abstract-node-rpc-connection/skip-info/#skipinfo","text":"open fun skipInfo(): Boolean Overrides NodeRpcConnection.skipInfo Controls ignoring this node when providing node infos","title":"skipInfo"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / EagerNodeRpcConnection EagerNodeRpcConnection open class EagerNodeRpcConnection : AbstractNodeRpcConnection Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient Parameters nodeParams - the RPC connection params Constructors Name Summary init EagerNodeRpcConnection(config: NodeRpcConnectionConfig ) Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient Properties Name Summary proxy open val proxy: CordaRPCOps Provides eager access to a CordaRPCOps RPC proxy Inherited Properties Name Summary rpcClient val rpcClient: CordaRPCClient Inherited Functions Name Summary createProxy fun createProxy(): CordaRPCOps Attempt to obtain a CordaRPCConnection , retry five times with a five second delay in case of an RPCException error onPreDestroy fun onPreDestroy(): Unit Try cleaning up on PreDestroy skipInfo open fun skipInfo(): Boolean Controls ignoring this node when providing node infos","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/#eagernoderpcconnection","text":"open class EagerNodeRpcConnection : AbstractNodeRpcConnection Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"EagerNodeRpcConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/#parameters","text":"nodeParams - the RPC connection params","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/#constructors","text":"Name Summary init EagerNodeRpcConnection(config: NodeRpcConnectionConfig ) Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/#properties","text":"Name Summary proxy open val proxy: CordaRPCOps Provides eager access to a CordaRPCOps RPC proxy","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/#inherited-properties","text":"Name Summary rpcClient val rpcClient: CordaRPCClient","title":"Inherited Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/#inherited-functions","text":"Name Summary createProxy fun createProxy(): CordaRPCOps Attempt to obtain a CordaRPCConnection , retry five times with a five second delay in case of an RPCException error onPreDestroy fun onPreDestroy(): Unit Try cleaning up on PreDestroy skipInfo open fun skipInfo(): Boolean Controls ignoring this node when providing node infos","title":"Inherited Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / EagerNodeRpcConnection / init init EagerNodeRpcConnection(config: NodeRpcConnectionConfig ) Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient Parameters nodeParams - the RPC connection params","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/-init-/#init","text":"EagerNodeRpcConnection(config: NodeRpcConnectionConfig ) Eagerly initialised implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/-init-/#parameters","text":"nodeParams - the RPC connection params","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/proxy/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / EagerNodeRpcConnection / proxy proxy open val proxy: CordaRPCOps Overrides NodeRpcConnection.proxy Provides eager access to a CordaRPCOps RPC proxy","title":"Proxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-eager-node-rpc-connection/proxy/#proxy","text":"open val proxy: CordaRPCOps Overrides NodeRpcConnection.proxy Provides eager access to a CordaRPCOps RPC proxy","title":"proxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / LazyNodeRpcConnection LazyNodeRpcConnection open class LazyNodeRpcConnection : AbstractNodeRpcConnection Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient Parameters nodeParams - the RPC connection params Constructors Name Summary init LazyNodeRpcConnection(config: NodeRpcConnectionConfig ) Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient Properties Name Summary proxy open val proxy: CordaRPCOps Provides lazy access to a CordaRPCOps RPC proxy Inherited Properties Name Summary rpcClient val rpcClient: CordaRPCClient Inherited Functions Name Summary createProxy fun createProxy(): CordaRPCOps Attempt to obtain a CordaRPCConnection , retry five times with a five second delay in case of an RPCException error onPreDestroy fun onPreDestroy(): Unit Try cleaning up on PreDestroy skipInfo open fun skipInfo(): Boolean Controls ignoring this node when providing node infos","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/#lazynoderpcconnection","text":"open class LazyNodeRpcConnection : AbstractNodeRpcConnection Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"LazyNodeRpcConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/#parameters","text":"nodeParams - the RPC connection params","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/#constructors","text":"Name Summary init LazyNodeRpcConnection(config: NodeRpcConnectionConfig ) Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/#properties","text":"Name Summary proxy open val proxy: CordaRPCOps Provides lazy access to a CordaRPCOps RPC proxy","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/#inherited-properties","text":"Name Summary rpcClient val rpcClient: CordaRPCClient","title":"Inherited Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/#inherited-functions","text":"Name Summary createProxy fun createProxy(): CordaRPCOps Attempt to obtain a CordaRPCConnection , retry five times with a five second delay in case of an RPCException error onPreDestroy fun onPreDestroy(): Unit Try cleaning up on PreDestroy skipInfo open fun skipInfo(): Boolean Controls ignoring this node when providing node infos","title":"Inherited Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / LazyNodeRpcConnection / init init LazyNodeRpcConnection(config: NodeRpcConnectionConfig ) Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient Parameters nodeParams - the RPC connection params","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/-init-/#init","text":"LazyNodeRpcConnection(config: NodeRpcConnectionConfig ) Lazily initialised implementation of NodeRpcConnection , wraps a CordaRPCClient","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/-init-/#parameters","text":"nodeParams - the RPC connection params","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/proxy/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / LazyNodeRpcConnection / proxy proxy open val proxy: CordaRPCOps Overrides NodeRpcConnection.proxy Provides lazy access to a CordaRPCOps RPC proxy Getter Provides lazy access to a CordaRPCOps RPC proxy","title":"Proxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-lazy-node-rpc-connection/proxy/#proxy","text":"open val proxy: CordaRPCOps Overrides NodeRpcConnection.proxy Provides lazy access to a CordaRPCOps RPC proxy Getter Provides lazy access to a CordaRPCOps RPC proxy","title":"proxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-node-rpc-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / NodeRpcConnection NodeRpcConnection interface NodeRpcConnection Wraps a Corda Node RPC connection proxy Properties Name Summary proxy abstract val proxy: CordaRPCOps Obtain a CordaRPCOps proxy for this connection Functions Name Summary skipInfo open fun skipInfo(): Boolean Whether this connection should be kept private e.g. from actuator Inheritors Name Summary AbstractNodeRpcConnection abstract class AbstractNodeRpcConnection : NodeRpcConnection Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient CordaRPCOpsWrappingConnection class CordaRPCOpsWrappingConnection : NodeRpcConnection","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-node-rpc-connection/#noderpcconnection","text":"interface NodeRpcConnection Wraps a Corda Node RPC connection proxy","title":"NodeRpcConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-node-rpc-connection/#properties","text":"Name Summary proxy abstract val proxy: CordaRPCOps Obtain a CordaRPCOps proxy for this connection","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-node-rpc-connection/#functions","text":"Name Summary skipInfo open fun skipInfo(): Boolean Whether this connection should be kept private e.g. from actuator","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-node-rpc-connection/#inheritors","text":"Name Summary AbstractNodeRpcConnection abstract class AbstractNodeRpcConnection : NodeRpcConnection Abstract implementation of NodeRpcConnection , wraps a CordaRPCClient CordaRPCOpsWrappingConnection class CordaRPCOpsWrappingConnection : NodeRpcConnection","title":"Inheritors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-node-rpc-connection/proxy/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / NodeRpcConnection / proxy proxy abstract val proxy: CordaRPCOps Obtain a CordaRPCOps proxy for this connection","title":"Proxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-node-rpc-connection/proxy/#proxy","text":"abstract val proxy: CordaRPCOps Obtain a CordaRPCOps proxy for this connection","title":"proxy"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-node-rpc-connection/skip-info/","text":"com.github.manosbatsis.corda.rpc.poolboy.connection / NodeRpcConnection / skipInfo skipInfo open fun skipInfo(): Boolean Whether this connection should be kept private e.g. from actuator","title":"Skip info"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.connection/-node-rpc-connection/skip-info/#skipinfo","text":"open fun skipInfo(): Boolean Whether this connection should be kept private e.g. from actuator","title":"skipInfo"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool Package com.github.manosbatsis.corda.rpc.poolboy.pool Types Name Summary BaseKeyedPool open class BaseKeyedPool K, T : GenericKeyedObjectPool K , T","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/#package-comgithubmanosbatsiscordarpcpoolboypool","text":"","title":"Package com.github.manosbatsis.corda.rpc.poolboy.pool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/#types","text":"Name Summary BaseKeyedPool open class BaseKeyedPool K, T : GenericKeyedObjectPool K , T","title":"Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/-base-keyed-pool/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool / BaseKeyedPool BaseKeyedPool open class BaseKeyedPool K, T : GenericKeyedObjectPool K , T Constructors Name Summary init BaseKeyedPool(keyedPooledObjectFactory: BaseKeyedPooledObjectFactory K , T , config: GenericKeyedObjectPoolConfig T ) Companion Object Functions Name Summary initPoolConfig fun T initPoolConfig(with: GenericKeyedObjectPoolConfigData ?, targetConfig: GenericKeyedObjectPoolConfig T ): GenericKeyedObjectPoolConfig T Inheritors Name Summary CordaRpcClientPool class CordaRpcClientPool : BaseKeyedPool PoolKey , CordaRPCClient NodeRpcConnectionPool class NodeRpcConnectionPool : BaseKeyedPool PoolKey , NodeRpcConnection","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/-base-keyed-pool/#basekeyedpool","text":"open class BaseKeyedPool K, T : GenericKeyedObjectPool K , T","title":"BaseKeyedPool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/-base-keyed-pool/#constructors","text":"Name Summary init BaseKeyedPool(keyedPooledObjectFactory: BaseKeyedPooledObjectFactory K , T , config: GenericKeyedObjectPoolConfig T )","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/-base-keyed-pool/#companion-object-functions","text":"Name Summary initPoolConfig fun T initPoolConfig(with: GenericKeyedObjectPoolConfigData ?, targetConfig: GenericKeyedObjectPoolConfig T ): GenericKeyedObjectPoolConfig T","title":"Companion Object Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/-base-keyed-pool/#inheritors","text":"Name Summary CordaRpcClientPool class CordaRpcClientPool : BaseKeyedPool PoolKey , CordaRPCClient NodeRpcConnectionPool class NodeRpcConnectionPool : BaseKeyedPool PoolKey , NodeRpcConnection","title":"Inheritors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/-base-keyed-pool/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool / BaseKeyedPool / init init BaseKeyedPool(keyedPooledObjectFactory: BaseKeyedPooledObjectFactory K , T , config: GenericKeyedObjectPoolConfig T )","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/-base-keyed-pool/-init-/#init","text":"BaseKeyedPool(keyedPooledObjectFactory: BaseKeyedPooledObjectFactory K , T , config: GenericKeyedObjectPoolConfig T )","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/-base-keyed-pool/init-pool-config/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool / BaseKeyedPool / initPoolConfig initPoolConfig fun T initPoolConfig(with: GenericKeyedObjectPoolConfigData ?, targetConfig: GenericKeyedObjectPoolConfig T ): GenericKeyedObjectPoolConfig T","title":"Init pool config"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool/-base-keyed-pool/init-pool-config/#initpoolconfig","text":"fun T initPoolConfig(with: GenericKeyedObjectPoolConfigData ?, targetConfig: GenericKeyedObjectPoolConfig T ): GenericKeyedObjectPoolConfig T","title":"initPoolConfig"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client Package com.github.manosbatsis.corda.rpc.poolboy.pool.client Types Name Summary CordaRpcClientFactory class CordaRpcClientFactory : BaseKeyedPooledObjectFactory PoolKey , CordaRPCClient CordaRpcClientPool class CordaRpcClientPool : BaseKeyedPool PoolKey , CordaRPCClient","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/#package-comgithubmanosbatsiscordarpcpoolboypoolclient","text":"","title":"Package com.github.manosbatsis.corda.rpc.poolboy.pool.client"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/#types","text":"Name Summary CordaRpcClientFactory class CordaRpcClientFactory : BaseKeyedPooledObjectFactory PoolKey , CordaRPCClient CordaRpcClientPool class CordaRpcClientPool : BaseKeyedPool PoolKey , CordaRPCClient","title":"Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory CordaRpcClientFactory class CordaRpcClientFactory : BaseKeyedPooledObjectFactory PoolKey , CordaRPCClient Constructors Name Summary init CordaRpcClientFactory(nodeParamsService: RpcConfigurationService ) Properties Name Summary nodeParamsService val nodeParamsService: RpcConfigurationService Functions Name Summary activateObject fun activateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Reinitialize an instance to be returned by the pool. create fun create(key: PoolKey ): CordaRPCClient Create an instance that can be served by the pool. destroyObject fun destroyObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Destroy an instance no longer needed by the pool. makeObject fun makeObject(key: PoolKey ): PooledObject CordaRPCClient passivateObject fun passivateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Uninitialize an instance to be returned to the idle object pool. validateObject fun validateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Boolean Ensures that the instance is safe to be returned by the pool. wrap fun wrap(value: CordaRPCClient): PooledObject CordaRPCClient Wrap the provided instance with an implementation of {@link PooledObject}.","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/#cordarpcclientfactory","text":"class CordaRpcClientFactory : BaseKeyedPooledObjectFactory PoolKey , CordaRPCClient","title":"CordaRpcClientFactory"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/#constructors","text":"Name Summary init CordaRpcClientFactory(nodeParamsService: RpcConfigurationService )","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/#properties","text":"Name Summary nodeParamsService val nodeParamsService: RpcConfigurationService","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/#functions","text":"Name Summary activateObject fun activateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Reinitialize an instance to be returned by the pool. create fun create(key: PoolKey ): CordaRPCClient Create an instance that can be served by the pool. destroyObject fun destroyObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Destroy an instance no longer needed by the pool. makeObject fun makeObject(key: PoolKey ): PooledObject CordaRPCClient passivateObject fun passivateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Uninitialize an instance to be returned to the idle object pool. validateObject fun validateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Boolean Ensures that the instance is safe to be returned by the pool. wrap fun wrap(value: CordaRPCClient): PooledObject CordaRPCClient Wrap the provided instance with an implementation of {@link PooledObject}.","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory / init init CordaRpcClientFactory(nodeParamsService: RpcConfigurationService )","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/-init-/#init","text":"CordaRpcClientFactory(nodeParamsService: RpcConfigurationService )","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/activate-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory / activateObject activateObject fun activateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Reinitialize an instance to be returned by the pool. Parameters key - the key used when selecting the object p - a {@code PooledObject} wrapping the instance to be activated","title":"Activate object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/activate-object/#activateobject","text":"fun activateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Reinitialize an instance to be returned by the pool.","title":"activateObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/activate-object/#parameters","text":"key - the key used when selecting the object p - a {@code PooledObject} wrapping the instance to be activated","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/create/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory / create create fun create(key: PoolKey ): CordaRPCClient Create an instance that can be served by the pool. Parameters key - the key used when constructing the object Exceptions Exception - if there is a problem creating a new instance, this will be propagated to the code requesting an object. Return an instance that can be served by the pool","title":"Create"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/create/#create","text":"fun create(key: PoolKey ): CordaRPCClient Create an instance that can be served by the pool.","title":"create"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/create/#parameters","text":"key - the key used when constructing the object","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/create/#exceptions","text":"Exception - if there is a problem creating a new instance, this will be propagated to the code requesting an object. Return an instance that can be served by the pool","title":"Exceptions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/destroy-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory / destroyObject destroyObject fun destroyObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Destroy an instance no longer needed by the pool. Parameters key - the key used when selecting the instance p - a {@code PooledObject} wrapping the instance to be destroyed","title":"Destroy object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/destroy-object/#destroyobject","text":"fun destroyObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Destroy an instance no longer needed by the pool.","title":"destroyObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/destroy-object/#parameters","text":"key - the key used when selecting the instance p - a {@code PooledObject} wrapping the instance to be destroyed","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/make-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory / makeObject makeObject fun makeObject(key: PoolKey ): PooledObject CordaRPCClient","title":"Make object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/make-object/#makeobject","text":"fun makeObject(key: PoolKey ): PooledObject CordaRPCClient","title":"makeObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/node-params-service/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory / nodeParamsService nodeParamsService val nodeParamsService: RpcConfigurationService","title":"Node params service"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/node-params-service/#nodeparamsservice","text":"val nodeParamsService: RpcConfigurationService","title":"nodeParamsService"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/passivate-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory / passivateObject passivateObject fun passivateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Uninitialize an instance to be returned to the idle object pool. Parameters key - the key used when selecting the object p - a {@code PooledObject} wrapping the instance to be passivated","title":"Passivate object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/passivate-object/#passivateobject","text":"fun passivateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Unit Uninitialize an instance to be returned to the idle object pool.","title":"passivateObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/passivate-object/#parameters","text":"key - the key used when selecting the object p - a {@code PooledObject} wrapping the instance to be passivated","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/validate-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory / validateObject validateObject fun validateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Boolean Ensures that the instance is safe to be returned by the pool. Parameters key - the key used when selecting the object p - a {@code PooledObject} wrapping the instance to be validated Return always true in the default implementation","title":"Validate object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/validate-object/#validateobject","text":"fun validateObject(key: PoolKey , p: PooledObject CordaRPCClient ): Boolean Ensures that the instance is safe to be returned by the pool.","title":"validateObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/validate-object/#parameters","text":"key - the key used when selecting the object p - a {@code PooledObject} wrapping the instance to be validated Return always true in the default implementation","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/wrap/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientFactory / wrap wrap fun wrap(value: CordaRPCClient): PooledObject CordaRPCClient Wrap the provided instance with an implementation of {@link PooledObject}. Parameters value - the instance to wrap Return The provided instance, wrapped by a {@link PooledObject}","title":"Wrap"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/wrap/#wrap","text":"fun wrap(value: CordaRPCClient): PooledObject CordaRPCClient Wrap the provided instance with an implementation of {@link PooledObject}.","title":"wrap"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-factory/wrap/#parameters","text":"value - the instance to wrap Return The provided instance, wrapped by a {@link PooledObject}","title":"Parameters"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-pool/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientPool CordaRpcClientPool class CordaRpcClientPool : BaseKeyedPool PoolKey , CordaRPCClient Constructors Name Summary init CordaRpcClientPool(nodeParamsService: RpcConfigurationService ) CordaRpcClientPool(config: GenericKeyedObjectPoolConfig CordaRPCClient , nodeParamsService: RpcConfigurationService ) Companion Object Functions Name Summary getPoolConfig fun getPoolConfig(nodeParamsService: RpcConfigurationService ): GenericKeyedObjectPoolConfig CordaRPCClient","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-pool/#cordarpcclientpool","text":"class CordaRpcClientPool : BaseKeyedPool PoolKey , CordaRPCClient","title":"CordaRpcClientPool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-pool/#constructors","text":"Name Summary init CordaRpcClientPool(nodeParamsService: RpcConfigurationService ) CordaRpcClientPool(config: GenericKeyedObjectPoolConfig CordaRPCClient , nodeParamsService: RpcConfigurationService )","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-pool/#companion-object-functions","text":"Name Summary getPoolConfig fun getPoolConfig(nodeParamsService: RpcConfigurationService ): GenericKeyedObjectPoolConfig CordaRPCClient","title":"Companion Object Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-pool/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientPool / init init CordaRpcClientPool(nodeParamsService: RpcConfigurationService ) CordaRpcClientPool(config: GenericKeyedObjectPoolConfig CordaRPCClient , nodeParamsService: RpcConfigurationService )","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-pool/-init-/#init","text":"CordaRpcClientPool(nodeParamsService: RpcConfigurationService ) CordaRpcClientPool(config: GenericKeyedObjectPoolConfig CordaRPCClient , nodeParamsService: RpcConfigurationService )","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-pool/get-pool-config/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.client / CordaRpcClientPool / getPoolConfig getPoolConfig fun getPoolConfig(nodeParamsService: RpcConfigurationService ): GenericKeyedObjectPoolConfig CordaRPCClient","title":"Get pool config"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.client/-corda-rpc-client-pool/get-pool-config/#getpoolconfig","text":"fun getPoolConfig(nodeParamsService: RpcConfigurationService ): GenericKeyedObjectPoolConfig CordaRPCClient","title":"getPoolConfig"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection Package com.github.manosbatsis.corda.rpc.poolboy.pool.connection Types Name Summary AbstractRpcConnectionFactory abstract class AbstractRpcConnectionFactory : BaseKeyedPooledObjectFactory PoolKey , NodeRpcConnection DedicatedRpcClientsNodeRpcConnectionFactory class DedicatedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection. NodeRpcConnectionConfig data class NodeRpcConnectionConfig NodeRpcConnectionPool class NodeRpcConnectionPool : BaseKeyedPool PoolKey , NodeRpcConnection PooledNodeRpcConnection class PooledNodeRpcConnection : DefaultPooledObject NodeRpcConnection RpcClientPoolBackedNodeRpcConnectionFactory class RpcClientPoolBackedNodeRpcConnectionFactory : AbstractRpcConnectionFactory Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool SharedRpcClientsNodeRpcConnectionFactory class SharedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name.","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/#package-comgithubmanosbatsiscordarpcpoolboypoolconnection","text":"","title":"Package com.github.manosbatsis.corda.rpc.poolboy.pool.connection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/#types","text":"Name Summary AbstractRpcConnectionFactory abstract class AbstractRpcConnectionFactory : BaseKeyedPooledObjectFactory PoolKey , NodeRpcConnection DedicatedRpcClientsNodeRpcConnectionFactory class DedicatedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection. NodeRpcConnectionConfig data class NodeRpcConnectionConfig NodeRpcConnectionPool class NodeRpcConnectionPool : BaseKeyedPool PoolKey , NodeRpcConnection PooledNodeRpcConnection class PooledNodeRpcConnection : DefaultPooledObject NodeRpcConnection RpcClientPoolBackedNodeRpcConnectionFactory class RpcClientPoolBackedNodeRpcConnectionFactory : AbstractRpcConnectionFactory Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool SharedRpcClientsNodeRpcConnectionFactory class SharedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name.","title":"Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / AbstractRpcConnectionFactory AbstractRpcConnectionFactory abstract class AbstractRpcConnectionFactory : BaseKeyedPooledObjectFactory PoolKey , NodeRpcConnection Constructors Name Summary init AbstractRpcConnectionFactory() Functions Name Summary destroyObject open fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit wrap open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection Inheritors Name Summary DedicatedRpcClientsNodeRpcConnectionFactory class DedicatedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection. RpcClientPoolBackedNodeRpcConnectionFactory class RpcClientPoolBackedNodeRpcConnectionFactory : AbstractRpcConnectionFactory Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool SharedRpcClientsNodeRpcConnectionFactory class SharedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name.","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/#abstractrpcconnectionfactory","text":"abstract class AbstractRpcConnectionFactory : BaseKeyedPooledObjectFactory PoolKey , NodeRpcConnection","title":"AbstractRpcConnectionFactory"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/#constructors","text":"Name Summary init AbstractRpcConnectionFactory()","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/#functions","text":"Name Summary destroyObject open fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit wrap open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/#inheritors","text":"Name Summary DedicatedRpcClientsNodeRpcConnectionFactory class DedicatedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection. RpcClientPoolBackedNodeRpcConnectionFactory class RpcClientPoolBackedNodeRpcConnectionFactory : AbstractRpcConnectionFactory Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool SharedRpcClientsNodeRpcConnectionFactory class SharedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name.","title":"Inheritors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / AbstractRpcConnectionFactory / init init AbstractRpcConnectionFactory()","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/-init-/#init","text":"AbstractRpcConnectionFactory()","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/destroy-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / AbstractRpcConnectionFactory / destroyObject destroyObject open fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit","title":"Destroy object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/destroy-object/#destroyobject","text":"open fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit","title":"destroyObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/wrap/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / AbstractRpcConnectionFactory / wrap wrap open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection","title":"Wrap"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-abstract-rpc-connection-factory/wrap/#wrap","text":"open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection","title":"wrap"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / DedicatedRpcClientsNodeRpcConnectionFactory DedicatedRpcClientsNodeRpcConnectionFactory class DedicatedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection. Constructors Name Summary init DedicatedRpcClientsNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService ) A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection. Properties Name Summary nodeParamsService val nodeParamsService: RpcConfigurationService Functions Name Summary create fun create(key: PoolKey ): NodeRpcConnection Inherited Functions Name Summary destroyObject open fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit wrap open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/#dedicatedrpcclientsnoderpcconnectionfactory","text":"class DedicatedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection.","title":"DedicatedRpcClientsNodeRpcConnectionFactory"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/#constructors","text":"Name Summary init DedicatedRpcClientsNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService ) A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection.","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/#properties","text":"Name Summary nodeParamsService val nodeParamsService: RpcConfigurationService","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/#functions","text":"Name Summary create fun create(key: PoolKey ): NodeRpcConnection","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/#inherited-functions","text":"Name Summary destroyObject open fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit wrap open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection","title":"Inherited Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / DedicatedRpcClientsNodeRpcConnectionFactory / init init DedicatedRpcClientsNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService ) A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection.","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/-init-/#init","text":"DedicatedRpcClientsNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService ) A NodeRpcConnection pool factory that uses a new CordaRPCClient fopr each connection.","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/create/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / DedicatedRpcClientsNodeRpcConnectionFactory / create create fun create(key: PoolKey ): NodeRpcConnection","title":"Create"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/create/#create","text":"fun create(key: PoolKey ): NodeRpcConnection","title":"create"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/node-params-service/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / DedicatedRpcClientsNodeRpcConnectionFactory / nodeParamsService nodeParamsService val nodeParamsService: RpcConfigurationService","title":"Node params service"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-dedicated-rpc-clients-node-rpc-connection-factory/node-params-service/#nodeparamsservice","text":"val nodeParamsService: RpcConfigurationService","title":"nodeParamsService"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionConfig NodeRpcConnectionConfig data class NodeRpcConnectionConfig Constructors Name Summary init NodeRpcConnectionConfig(address: String, username: String, password: String, eager: Boolean, externalTrace: Trace? = null, impersonatedActor: Actor? = null, targetLegalIdentity: CordaX500Name, gracefulReconnect: GracefulReconnect? = null) NodeRpcConnectionConfig(nodeParams: NodeParams , targetLegalIdentity: CordaX500Name, externalTrace: Trace? = null, impersonatedActor: Actor? = null, gracefulReconnect: GracefulReconnect? = null) Properties Name Summary externalTrace val externalTrace: Trace? gracefulReconnect val gracefulReconnect: GracefulReconnect? impersonatedActor val impersonatedActor: Actor? nodeParams val nodeParams: NodeParams targetLegalIdentity val targetLegalIdentity: CordaX500Name","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/#noderpcconnectionconfig","text":"data class NodeRpcConnectionConfig","title":"NodeRpcConnectionConfig"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/#constructors","text":"Name Summary init NodeRpcConnectionConfig(address: String, username: String, password: String, eager: Boolean, externalTrace: Trace? = null, impersonatedActor: Actor? = null, targetLegalIdentity: CordaX500Name, gracefulReconnect: GracefulReconnect? = null) NodeRpcConnectionConfig(nodeParams: NodeParams , targetLegalIdentity: CordaX500Name, externalTrace: Trace? = null, impersonatedActor: Actor? = null, gracefulReconnect: GracefulReconnect? = null)","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/#properties","text":"Name Summary externalTrace val externalTrace: Trace? gracefulReconnect val gracefulReconnect: GracefulReconnect? impersonatedActor val impersonatedActor: Actor? nodeParams val nodeParams: NodeParams targetLegalIdentity val targetLegalIdentity: CordaX500Name","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionConfig / init init NodeRpcConnectionConfig(address: String, username: String, password: String, eager: Boolean, externalTrace: Trace? = null, impersonatedActor: Actor? = null, targetLegalIdentity: CordaX500Name, gracefulReconnect: GracefulReconnect? = null) NodeRpcConnectionConfig(nodeParams: NodeParams , targetLegalIdentity: CordaX500Name, externalTrace: Trace? = null, impersonatedActor: Actor? = null, gracefulReconnect: GracefulReconnect? = null)","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/-init-/#init","text":"NodeRpcConnectionConfig(address: String, username: String, password: String, eager: Boolean, externalTrace: Trace? = null, impersonatedActor: Actor? = null, targetLegalIdentity: CordaX500Name, gracefulReconnect: GracefulReconnect? = null) NodeRpcConnectionConfig(nodeParams: NodeParams , targetLegalIdentity: CordaX500Name, externalTrace: Trace? = null, impersonatedActor: Actor? = null, gracefulReconnect: GracefulReconnect? = null)","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/external-trace/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionConfig / externalTrace externalTrace val externalTrace: Trace?","title":"External trace"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/external-trace/#externaltrace","text":"val externalTrace: Trace?","title":"externalTrace"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/graceful-reconnect/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionConfig / gracefulReconnect gracefulReconnect val gracefulReconnect: GracefulReconnect?","title":"Graceful reconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/graceful-reconnect/#gracefulreconnect","text":"val gracefulReconnect: GracefulReconnect?","title":"gracefulReconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/impersonated-actor/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionConfig / impersonatedActor impersonatedActor val impersonatedActor: Actor?","title":"Impersonated actor"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/impersonated-actor/#impersonatedactor","text":"val impersonatedActor: Actor?","title":"impersonatedActor"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/node-params/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionConfig / nodeParams nodeParams val nodeParams: NodeParams","title":"Node params"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/node-params/#nodeparams","text":"val nodeParams: NodeParams","title":"nodeParams"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/target-legal-identity/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionConfig / targetLegalIdentity targetLegalIdentity val targetLegalIdentity: CordaX500Name","title":"Target legal identity"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-config/target-legal-identity/#targetlegalidentity","text":"val targetLegalIdentity: CordaX500Name","title":"targetLegalIdentity"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionPool NodeRpcConnectionPool class NodeRpcConnectionPool : BaseKeyedPool PoolKey , NodeRpcConnection Constructors Name Summary init NodeRpcConnectionPool(nodeParamsService: RpcConfigurationService ) NodeRpcConnectionPool(rpcConnectionPoolConfig: GenericKeyedObjectPoolConfig NodeRpcConnection , nodeParamsService: RpcConfigurationService ) Companion Object Functions Name Summary buildConnectionFactory fun buildConnectionFactory(nodeParamsService: RpcConfigurationService ): AbstractRpcConnectionFactory getPoolConfig fun getPoolConfig(nodeParamsService: RpcConfigurationService ): GenericKeyedObjectPoolConfig NodeRpcConnection","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/#noderpcconnectionpool","text":"class NodeRpcConnectionPool : BaseKeyedPool PoolKey , NodeRpcConnection","title":"NodeRpcConnectionPool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/#constructors","text":"Name Summary init NodeRpcConnectionPool(nodeParamsService: RpcConfigurationService ) NodeRpcConnectionPool(rpcConnectionPoolConfig: GenericKeyedObjectPoolConfig NodeRpcConnection , nodeParamsService: RpcConfigurationService )","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/#companion-object-functions","text":"Name Summary buildConnectionFactory fun buildConnectionFactory(nodeParamsService: RpcConfigurationService ): AbstractRpcConnectionFactory getPoolConfig fun getPoolConfig(nodeParamsService: RpcConfigurationService ): GenericKeyedObjectPoolConfig NodeRpcConnection","title":"Companion Object Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionPool / init init NodeRpcConnectionPool(nodeParamsService: RpcConfigurationService ) NodeRpcConnectionPool(rpcConnectionPoolConfig: GenericKeyedObjectPoolConfig NodeRpcConnection , nodeParamsService: RpcConfigurationService )","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/-init-/#init","text":"NodeRpcConnectionPool(nodeParamsService: RpcConfigurationService ) NodeRpcConnectionPool(rpcConnectionPoolConfig: GenericKeyedObjectPoolConfig NodeRpcConnection , nodeParamsService: RpcConfigurationService )","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/build-connection-factory/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionPool / buildConnectionFactory buildConnectionFactory fun buildConnectionFactory(nodeParamsService: RpcConfigurationService ): AbstractRpcConnectionFactory","title":"Build connection factory"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/build-connection-factory/#buildconnectionfactory","text":"fun buildConnectionFactory(nodeParamsService: RpcConfigurationService ): AbstractRpcConnectionFactory","title":"buildConnectionFactory"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/get-pool-config/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / NodeRpcConnectionPool / getPoolConfig getPoolConfig fun getPoolConfig(nodeParamsService: RpcConfigurationService ): GenericKeyedObjectPoolConfig NodeRpcConnection","title":"Get pool config"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-node-rpc-connection-pool/get-pool-config/#getpoolconfig","text":"fun getPoolConfig(nodeParamsService: RpcConfigurationService ): GenericKeyedObjectPoolConfig NodeRpcConnection","title":"getPoolConfig"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-pooled-node-rpc-connection/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / PooledNodeRpcConnection PooledNodeRpcConnection class PooledNodeRpcConnection : DefaultPooledObject NodeRpcConnection Constructors Name Summary init PooledNodeRpcConnection(nodeRpcConnection: NodeRpcConnection )","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-pooled-node-rpc-connection/#poolednoderpcconnection","text":"class PooledNodeRpcConnection : DefaultPooledObject NodeRpcConnection","title":"PooledNodeRpcConnection"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-pooled-node-rpc-connection/#constructors","text":"Name Summary init PooledNodeRpcConnection(nodeRpcConnection: NodeRpcConnection )","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-pooled-node-rpc-connection/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / PooledNodeRpcConnection / init init PooledNodeRpcConnection(nodeRpcConnection: NodeRpcConnection )","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-pooled-node-rpc-connection/-init-/#init","text":"PooledNodeRpcConnection(nodeRpcConnection: NodeRpcConnection )","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory RpcClientPoolBackedNodeRpcConnectionFactory class RpcClientPoolBackedNodeRpcConnectionFactory : AbstractRpcConnectionFactory Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool Constructors Name Summary init RpcClientPoolBackedNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService , rpcClientPool: CordaRpcClientPool ) Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool Properties Name Summary nodeParamsService val nodeParamsService: RpcConfigurationService rpcClientPool val rpcClientPool: CordaRpcClientPool Parent pool for reusing CordaRPCClient Functions Name Summary activateObject fun activateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit create fun create(key: PoolKey ): NodeRpcConnection destroyObject fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit makeObject fun makeObject(key: PoolKey ): PooledObject NodeRpcConnection passivateObject fun passivateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit validateObject fun validateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Boolean Inherited Functions Name Summary wrap open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/#rpcclientpoolbackednoderpcconnectionfactory","text":"class RpcClientPoolBackedNodeRpcConnectionFactory : AbstractRpcConnectionFactory Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool","title":"RpcClientPoolBackedNodeRpcConnectionFactory"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/#constructors","text":"Name Summary init RpcClientPoolBackedNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService , rpcClientPool: CordaRpcClientPool ) Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/#properties","text":"Name Summary nodeParamsService val nodeParamsService: RpcConfigurationService rpcClientPool val rpcClientPool: CordaRpcClientPool Parent pool for reusing CordaRPCClient","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/#functions","text":"Name Summary activateObject fun activateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit create fun create(key: PoolKey ): NodeRpcConnection destroyObject fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit makeObject fun makeObject(key: PoolKey ): PooledObject NodeRpcConnection passivateObject fun passivateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit validateObject fun validateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Boolean","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/#inherited-functions","text":"Name Summary wrap open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection","title":"Inherited Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory / init init RpcClientPoolBackedNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService , rpcClientPool: CordaRpcClientPool ) Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/-init-/#init","text":"RpcClientPoolBackedNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService , rpcClientPool: CordaRpcClientPool ) Pool factory for NodeRpcConnection s backed by a nested CordaRPCClient pool","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/activate-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory / activateObject activateObject fun activateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit","title":"Activate object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/activate-object/#activateobject","text":"fun activateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit","title":"activateObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/create/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory / create create fun create(key: PoolKey ): NodeRpcConnection","title":"Create"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/create/#create","text":"fun create(key: PoolKey ): NodeRpcConnection","title":"create"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/destroy-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory / destroyObject destroyObject fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit Overrides AbstractRpcConnectionFactory.destroyObject","title":"Destroy object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/destroy-object/#destroyobject","text":"fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit Overrides AbstractRpcConnectionFactory.destroyObject","title":"destroyObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/make-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory / makeObject makeObject fun makeObject(key: PoolKey ): PooledObject NodeRpcConnection","title":"Make object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/make-object/#makeobject","text":"fun makeObject(key: PoolKey ): PooledObject NodeRpcConnection","title":"makeObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/node-params-service/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory / nodeParamsService nodeParamsService val nodeParamsService: RpcConfigurationService","title":"Node params service"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/node-params-service/#nodeparamsservice","text":"val nodeParamsService: RpcConfigurationService","title":"nodeParamsService"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/passivate-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory / passivateObject passivateObject fun passivateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit","title":"Passivate object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/passivate-object/#passivateobject","text":"fun passivateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit","title":"passivateObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/rpc-client-pool/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory / rpcClientPool rpcClientPool val rpcClientPool: CordaRpcClientPool Parent pool for reusing CordaRPCClient","title":"Rpc client pool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/rpc-client-pool/#rpcclientpool","text":"val rpcClientPool: CordaRpcClientPool Parent pool for reusing CordaRPCClient","title":"rpcClientPool"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/validate-object/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / RpcClientPoolBackedNodeRpcConnectionFactory / validateObject validateObject fun validateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Boolean","title":"Validate object"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-rpc-client-pool-backed-node-rpc-connection-factory/validate-object/#validateobject","text":"fun validateObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Boolean","title":"validateObject"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / SharedRpcClientsNodeRpcConnectionFactory SharedRpcClientsNodeRpcConnectionFactory class SharedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name. Types Name Summary ClientKey data class ClientKey Constructors Name Summary init SharedRpcClientsNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService ) A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name. Properties Name Summary nodeParamsService val nodeParamsService: RpcConfigurationService Functions Name Summary create fun create(key: PoolKey ): NodeRpcConnection Inherited Functions Name Summary destroyObject open fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit wrap open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/#sharedrpcclientsnoderpcconnectionfactory","text":"class SharedRpcClientsNodeRpcConnectionFactory : AbstractRpcConnectionFactory A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name.","title":"SharedRpcClientsNodeRpcConnectionFactory"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/#types","text":"Name Summary ClientKey data class ClientKey","title":"Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/#constructors","text":"Name Summary init SharedRpcClientsNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService ) A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name.","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/#properties","text":"Name Summary nodeParamsService val nodeParamsService: RpcConfigurationService","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/#functions","text":"Name Summary create fun create(key: PoolKey ): NodeRpcConnection","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/#inherited-functions","text":"Name Summary destroyObject open fun destroyObject(key: PoolKey , p: PooledObject NodeRpcConnection ): Unit wrap open fun wrap(value: NodeRpcConnection ): PooledObject NodeRpcConnection","title":"Inherited Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / SharedRpcClientsNodeRpcConnectionFactory / init init SharedRpcClientsNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService ) A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name.","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-init-/#init","text":"SharedRpcClientsNodeRpcConnectionFactory(nodeParamsService: RpcConfigurationService ) A NodeRpcConnection pool factory using CordaRPCClient shared based on a ClientKey , i.e. by address and RPC user name.","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/create/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / SharedRpcClientsNodeRpcConnectionFactory / create create fun create(key: PoolKey ): NodeRpcConnection","title":"Create"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/create/#create","text":"fun create(key: PoolKey ): NodeRpcConnection","title":"create"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/node-params-service/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / SharedRpcClientsNodeRpcConnectionFactory / nodeParamsService nodeParamsService val nodeParamsService: RpcConfigurationService","title":"Node params service"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/node-params-service/#nodeparamsservice","text":"val nodeParamsService: RpcConfigurationService","title":"nodeParamsService"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / SharedRpcClientsNodeRpcConnectionFactory / ClientKey ClientKey data class ClientKey Constructors Name Summary init ClientKey(address: String, username: String) Properties Name Summary address val address: String username val username: String","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/#clientkey","text":"data class ClientKey","title":"ClientKey"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/#constructors","text":"Name Summary init ClientKey(address: String, username: String)","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/#properties","text":"Name Summary address val address: String username val username: String","title":"Properties"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / SharedRpcClientsNodeRpcConnectionFactory / ClientKey / init init ClientKey(address: String, username: String)","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/-init-/#init","text":"ClientKey(address: String, username: String)","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/address/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / SharedRpcClientsNodeRpcConnectionFactory / ClientKey / address address val address: String","title":"Address"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/address/#address","text":"val address: String","title":"address"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/username/","text":"com.github.manosbatsis.corda.rpc.poolboy.pool.connection / SharedRpcClientsNodeRpcConnectionFactory / ClientKey / username username val username: String","title":"Username"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.pool.connection/-shared-rpc-clients-node-rpc-connection-factory/-client-key/username/#username","text":"val username: String","title":"username"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/","text":"com.github.manosbatsis.corda.rpc.poolboy.support Package com.github.manosbatsis.corda.rpc.poolboy.support Types Name Summary RpcSwallowedExceptionListener class RpcSwallowedExceptionListener : SwallowedExceptionListener Util interface Util","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/#package-comgithubmanosbatsiscordarpcpoolboysupport","text":"","title":"Package com.github.manosbatsis.corda.rpc.poolboy.support"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/#types","text":"Name Summary RpcSwallowedExceptionListener class RpcSwallowedExceptionListener : SwallowedExceptionListener Util interface Util","title":"Types"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-rpc-swallowed-exception-listener/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / RpcSwallowedExceptionListener RpcSwallowedExceptionListener class RpcSwallowedExceptionListener : SwallowedExceptionListener Constructors Name Summary init RpcSwallowedExceptionListener() Functions Name Summary onSwallowException fun onSwallowException(e: Exception): Unit","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-rpc-swallowed-exception-listener/#rpcswallowedexceptionlistener","text":"class RpcSwallowedExceptionListener : SwallowedExceptionListener","title":"RpcSwallowedExceptionListener"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-rpc-swallowed-exception-listener/#constructors","text":"Name Summary init RpcSwallowedExceptionListener()","title":"Constructors"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-rpc-swallowed-exception-listener/#functions","text":"Name Summary onSwallowException fun onSwallowException(e: Exception): Unit","title":"Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-rpc-swallowed-exception-listener/-init-/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / RpcSwallowedExceptionListener / init init RpcSwallowedExceptionListener()","title":" init "},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-rpc-swallowed-exception-listener/-init-/#init","text":"RpcSwallowedExceptionListener()","title":"&lt;init&gt;"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-rpc-swallowed-exception-listener/on-swallow-exception/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / RpcSwallowedExceptionListener / onSwallowException onSwallowException fun onSwallowException(e: Exception): Unit","title":"On swallow exception"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-rpc-swallowed-exception-listener/on-swallow-exception/#onswallowexception","text":"fun onSwallowException(e: Exception): Unit","title":"onSwallowException"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / Util Util interface Util Companion Object Functions Name Summary buildRpcAddress fun buildRpcAddress(config: NodeParams ): NetworkHostAndPort Build a NetworkHostAndPort from the configuration host and port buildRpcClientConfig fun buildRpcClientConfig(config: NodeParams ): CordaRPCClientConfiguration Build a CordaRPCClientConfiguration based on the provided NodeParams clientRpcSslOptions fun clientRpcSslOptions(config: NodeParams ): ClientRpcSslOptions? Get the ClientRpcSslOptions if properly configured createCordaRPCClient fun createCordaRPCClient(config: NodeParams ): CordaRPCClient defaultGracefullReconnect fun defaultGracefullReconnect(nodeParams: NodeParams ): GracefulReconnect onDisconnect fun onDisconnect(): Unit onReconnect fun onReconnect(): Unit","title":"Home"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/#util","text":"interface Util","title":"Util"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/#companion-object-functions","text":"Name Summary buildRpcAddress fun buildRpcAddress(config: NodeParams ): NetworkHostAndPort Build a NetworkHostAndPort from the configuration host and port buildRpcClientConfig fun buildRpcClientConfig(config: NodeParams ): CordaRPCClientConfiguration Build a CordaRPCClientConfiguration based on the provided NodeParams clientRpcSslOptions fun clientRpcSslOptions(config: NodeParams ): ClientRpcSslOptions? Get the ClientRpcSslOptions if properly configured createCordaRPCClient fun createCordaRPCClient(config: NodeParams ): CordaRPCClient defaultGracefullReconnect fun defaultGracefullReconnect(nodeParams: NodeParams ): GracefulReconnect onDisconnect fun onDisconnect(): Unit onReconnect fun onReconnect(): Unit","title":"Companion Object Functions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/build-rpc-address/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / Util / buildRpcAddress buildRpcAddress fun buildRpcAddress(config: NodeParams ): NetworkHostAndPort Build a NetworkHostAndPort from the configuration host and port","title":"Build rpc address"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/build-rpc-address/#buildrpcaddress","text":"fun buildRpcAddress(config: NodeParams ): NetworkHostAndPort Build a NetworkHostAndPort from the configuration host and port","title":"buildRpcAddress"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/build-rpc-client-config/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / Util / buildRpcClientConfig buildRpcClientConfig fun buildRpcClientConfig(config: NodeParams ): CordaRPCClientConfiguration Build a CordaRPCClientConfiguration based on the provided NodeParams","title":"Build rpc client config"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/build-rpc-client-config/#buildrpcclientconfig","text":"fun buildRpcClientConfig(config: NodeParams ): CordaRPCClientConfiguration Build a CordaRPCClientConfiguration based on the provided NodeParams","title":"buildRpcClientConfig"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/client-rpc-ssl-options/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / Util / clientRpcSslOptions clientRpcSslOptions fun clientRpcSslOptions(config: NodeParams ): ClientRpcSslOptions? Get the ClientRpcSslOptions if properly configured Exceptions IllegalArgumentException - if the configuration is incomplete Return the options if properly configured, null otherwise","title":"Client rpc ssl options"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/client-rpc-ssl-options/#clientrpcssloptions","text":"fun clientRpcSslOptions(config: NodeParams ): ClientRpcSslOptions? Get the ClientRpcSslOptions if properly configured","title":"clientRpcSslOptions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/client-rpc-ssl-options/#exceptions","text":"IllegalArgumentException - if the configuration is incomplete Return the options if properly configured, null otherwise","title":"Exceptions"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/create-corda-r-p-c-client/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / Util / createCordaRPCClient createCordaRPCClient fun createCordaRPCClient(config: NodeParams ): CordaRPCClient","title":"Create corda r p c client"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/create-corda-r-p-c-client/#createcordarpcclient","text":"fun createCordaRPCClient(config: NodeParams ): CordaRPCClient","title":"createCordaRPCClient"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/default-gracefull-reconnect/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / Util / defaultGracefullReconnect defaultGracefullReconnect fun defaultGracefullReconnect(nodeParams: NodeParams ): GracefulReconnect","title":"Default gracefull reconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/default-gracefull-reconnect/#defaultgracefullreconnect","text":"fun defaultGracefullReconnect(nodeParams: NodeParams ): GracefulReconnect","title":"defaultGracefullReconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/on-disconnect/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / Util / onDisconnect onDisconnect fun onDisconnect(): Unit","title":"On disconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/on-disconnect/#ondisconnect","text":"fun onDisconnect(): Unit","title":"onDisconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/on-reconnect/","text":"com.github.manosbatsis.corda.rpc.poolboy.support / Util / onReconnect onReconnect fun onReconnect(): Unit","title":"On reconnect"},{"location":"0.x/com.github.manosbatsis.corda.rpc.poolboy.support/-util/on-reconnect/#onreconnect","text":"fun onReconnect(): Unit","title":"onReconnect"}]}